{"version":3,"sources":["pages/home/home.styles.tsx","components/wallet/wallet.styles.tsx","components/wallet-header/wallet-header.styles.tsx","graphql/mutations/server-mutations.ts","graphql/queries/server-queries.ts","contexts/user.context.tsx","components/balance-info/balance-info.styles.tsx","components/custom-input/custom-input.styles.tsx","components/custom-input/custom-input.component.tsx","components/balance-info/balance-info.component.tsx","components/balance-info/balance-info.container.tsx","components/stock-purchase/stock-purchase.styles.tsx","components/stock-purchase/stock-purchase.component.tsx","components/stock-purchase/stock-purchase.container.tsx","components/wallet-header/wallet-header.component.tsx","components/wallet/wallet.component.tsx","components/stocks/stocks.styles.tsx","components/stock-item/stock-item.styles.tsx","components/stock-item-content/stock-item-content.styles.tsx","components/stock-item-content-column/stock-item-content-column.styles.tsx","components/stock-item-content-column/stock-item-content-column.component.tsx","components/stock-item-content/stock-item-content.component.tsx","components/stock-status/stock-status.styles.tsx","components/stock-status/stock-status.component.tsx","components/stock-item-header/stock-item-header.styles.tsx","components/stock-item-header/stock-item-header.component.tsx","components/stock-edit/stock-edit.styles.tsx","components/stock-edit/stock-edit.component.tsx","components/stock-edit/stock-edit.container.tsx","components/stock-item/stock-item.component.tsx","components/add-stock/add-stock.styles.tsx","components/add-stock/add-stock.component.tsx","components/add-stock/add-stock.container.tsx","components/stocks/stocks.component.tsx","pages/home/home.page.tsx","pages/login/login.styles.tsx","components/custom-button/custom-button.styles.tsx","components/custom-button/custom-button.component.tsx","pages/login/login.page.tsx","components/authenticated/authenticated.component.tsx","pages/register/register.styles.tsx","pages/register/register.component.tsx","App/App.tsx","index.styles.tsx","index.tsx"],"names":["Container","styled","div","Headline","h1","props","theme","primaryBlue","Content","Buttons","ButtonsContent","LOGIN_WITH_CREDENTIALS","gql","LOGIN_WITH_GOOGLE","REGISTER","CHANGE_USER_AVAILABLE_BALANCE","ADD_NEW_USER_STOCK","ADD_EXISTING_USER_STOCK","EDIT_USER_STOCK","DELETE_USER_STOCK","GET_USER_PROFILE","UserContext","createContext","currentUser","loginWithCredentials","loginWithGoogle","register","logout","checkUserSession","updateCurrentUser","editableStocks","setEditableStocks","loading","UserContextProvider","children","useState","setCurrentUser","setLoading","useMutation","onCompleted","user","message","success","name","loginWithCredentialsMutation","loginWithGoogleMutation","registerMutation","refetch","useQuery","email","password","a","variables","data","authToken","localStorage","setItem","error","googleResponse","profileObj","googleId","me","Provider","value","removeItem","InputContainer","h2","WithButton","GlobalStyled","createGlobalStyle","StyledInput","Input","width","backgroundcolor","bordercolor","StyledInputNumber","InputNumber","CustomInput","size","CustomNumberInput","placeholder","BalanceInfo","availableBalance","investedBalance","totalBalance","handleChange","handleSubmit","availableBalanceInput","setAvailableBalanceInput","useEffect","isMobile","useMediaQuery","query","customInput","thousandSeparator","decimalSeparator","prefix","fixedDecimalScale","onChange","onPressEnter","type","icon","SaveOutlined","disabled","onClick","displayType","renderText","readOnly","color","BalanceInfoContainer","useContext","changeUserAvailableBalance","event","valueInNumber","Number","target","replace","id","newAvailableBalance","InputsContainer","StockPurchase","symbol","quantity","handleSymbolChange","handleQuantityChange","min","PlusOutlined","StockPurchaseContainer","setSymbol","setQuantity","addExistingUserStock","onError","e","trim","userId","Header","Wallet","history","useHistory","push","ColumnsInfo","Score","Columns","Item","headline","adjustment","StockItemColumn","headlineText","contentType","stock","totalInvested","percentageOfThePortfolio","idealQuantity","idealTotalInvested","idealPercentageOfThePortfolio","quantityAdjustment","totalInvestedAdjustment","StockItemContent","score","Status","status","StockStatus","Info","Symbol","p","Name","Value","Price","ChangePercent","isPositive","StockItemHeader","price","changePercent","GlobalStyle","Fields","Field","Title","StockEdit","handleScoreChange","handleConfirmDelete","handleSaveChanges","resetInputs","max","CloseOutlined","placement","title","okText","cancelText","className","onConfirm","DeleteOutlined","StockEditContainer","React","setScore","stockId","editUserStock","deleteUserStock","StockItem","AddStock","visible","handleEnterPress","handleOpenModal","handleCancel","isIphone5s","centered","onOk","onCancel","closable","okButtonProps","CheckOutlined","cancelButtonProps","AddStockContainer","setVisible","addNewUserStock","Stocks","EditOutlined","stocks","map","key","HomePage","StyledButton","Button","outlined","CustomButton","rest","LoginPage","setEmail","setPassword","clientId","process","buttonText","onSuccess","response","cookiePolicy","render","GoogleOutlined","Authenticated","RegisterPage","setName","length","info","App","exact","path","httpLink","createHttpLink","uri","authLink","setContext","_","headers","token","getItem","Authorization","client","ApolloClient","link","concat","cache","InMemoryCache","typePolicies","User","keyFields","Stock","StockType","UserType","ReactDOM","document","getElementById"],"mappings":"2bAEO,IAAMA,EAAYC,IAAOC,IAAV,K,48BCAf,IAAMF,EAAYC,IAAOC,IAAV,KAMTC,EAAWF,IAAOG,GAAV,KAGO,SAACC,GAAD,OAAWA,EAAMC,MAAMC,eAKtCC,EAAUP,IAAOC,IAAV,KAWPO,EAAUR,IAAOC,IAAV,KAIPQ,EAAiBT,IAAOC,IAAV,K,kMC7BpB,IAAMF,EAAYC,IAAOC,IAAV,K,sgNCAf,IAAMS,EAAyBC,cAAH,KAmCtBC,EAAoBD,cAAH,KAuCjBE,EAAWF,cAAH,KAmCRG,EAAgCH,cAAH,KAsC7BI,EAAqBJ,cAAH,KA0ClBK,EAA0BL,cAAH,KAwCvBM,EAAkBN,cAAH,KAyCfO,EAAoBP,cAAH,K,i/CC9QvB,IAAMQ,EAAmBR,cAAH,KCkChBS,IDFwBT,cAAH,KAWHA,cAAH,KCTDU,wBAA4B,CACtDC,YAAa,KACbC,qBAAsB,aACtBC,gBAAiB,aACjBC,SAAU,aACVC,OAAQ,aACRC,iBAAkB,aAClBC,kBAAmB,aACnBC,gBAAgB,EAChBC,kBAAmB,KACnBC,SAAS,KA6HKC,GAtHgE,SAAC,GAEzE,IADNC,EACK,EADLA,SACK,EACiCC,mBAAsB,MADvD,mBACEZ,EADF,KACea,EADf,OAEuCD,oBAAS,GAFhD,mBAEEL,EAFF,KAEkBC,EAFlB,OAGyBI,oBAAS,GAHlC,mBAGEH,EAHF,KAGWK,EAHX,OAKkCC,sBAAY3B,EAAwB,CAC1E4B,YAAa,gBAA2BC,EAA3B,EAAGhB,qBAAwBgB,KAA3B,OACZC,IAAQC,QAAR,wBAAiCF,EAAKG,KAAtC,SAFKC,EALF,sBAS6BN,sBAAYzB,EAAmB,CAChE0B,YAAa,gBAAsBC,EAAtB,EAAGf,gBAAmBe,KAAtB,OACZC,IAAQC,QAAR,mBAA4BF,EAAKG,KAAjC,SAFKE,EATF,sBAasBP,sBAAYxB,EAAU,CAChDyB,YAAa,gBAAeC,EAAf,EAAGd,SAAYc,KAAf,OACZC,IAAQC,QAAR,mBAA4BF,EAAKG,KAAjC,SAFKG,EAbF,oBAiBGC,EAAYC,mBAAS5B,GAArB2B,QAEFvB,EAAoB,uCAAG,WAAOyB,EAAeC,GAAtB,qBAAAC,EAAA,+EAMjBP,EAA6B,CACtCQ,UAAW,CAAEH,QAAOC,cAPM,oBAG1BG,KACC7B,qBAAwBgB,EAJC,EAIDA,KAAMc,EAJL,EAIKA,UAMhClB,EAAeI,GACfe,aAAaC,QAAQ,YAAaF,GAXP,kDAa3Bb,IAAQgB,MAAM,KAAIhB,SAbS,0DAAH,wDAiBpBhB,EAAe,uCAAG,WAAOiC,GAAP,6BAAAP,EAAA,+DAGnBO,EADHC,WAAchB,EAFQ,EAERA,KAAMM,EAFE,EAEFA,MAAOW,EAFL,EAEKA,SAFL,kBASZf,EAAwB,CACjCO,UAAW,CAAET,OAAMM,QAAOW,cAVL,oBAMrBP,KACC5B,gBAAmBe,EAPC,EAODA,KAAMc,EAPL,EAOKA,UAM3BlB,EAAeI,GACfe,aAAaC,QAAQ,YAAaF,GAdZ,kDAgBtBb,IAAQgB,MAAM,KAAIhB,SAhBI,0DAAH,sDAoBff,EAAQ,uCAAG,WAAOiB,EAAcM,EAAeC,GAApC,qBAAAC,EAAA,+EAMLL,EAAiB,CAC1BM,UAAW,CAAET,OAAMM,QAAOC,cAPZ,oBAGdG,KACC3B,SAAYc,EAJC,EAIDA,KAAMc,EAJL,EAIKA,UAMpBlB,EAAeI,GACfe,aAAaC,QAAQ,YAAaF,GAXnB,kDAafb,IAAQgB,MAAM,KAAIhB,SAbH,0DAAH,0DAsBRb,EAAgB,uCAAG,8BAAAuB,EAAA,sEAEvBd,GAAW,GAFY,SAKbU,IALa,iBAIVP,EAJU,EAItBa,KAAQQ,KAECzB,EAAeI,GACzBH,GAAW,GAPY,kDASvBA,GAAW,GACXD,EAAe,MAVQ,0DAAH,qDAchBP,EAAiB,uCAAG,WAAOW,GAAP,SAAAW,EAAA,sDACzBf,EAAeI,GADU,2CAAH,sDAIvB,OACC,gBAACnB,GAAYyC,SAAb,CACCC,MAAO,CACNxC,cACAC,uBACAC,kBACAC,WACAC,OA9BY,WACd4B,aAAaS,WAAW,aACxB5B,EAAe,OA6BbR,mBACAC,oBACAC,iBACAC,oBACAC,YAGAE,I,s1BCpKG,IAAMlC,GAAYC,IAAOC,IAAV,MAIT+D,GAAiBhE,IAAOC,IAAV,MAmBdC,GAAWF,IAAOiE,GAAV,MAWRC,GAAalE,IAAOC,IAAV,M,4yBCnBhB,IAAMkE,GAAeC,YAAH,MAQZC,GAAcrE,YAAOsE,KAAPtE,CAAH,MACd,qBAAGuE,SAGE,gBAAGC,EAAH,EAAGA,gBAAH,OACbA,GAAoC,sBAErB,gBAAGC,EAAH,EAAGA,YAAH,OACfA,GAA4B,8BASd,qBAAGpE,MAAkBC,eACnB,qBAAGD,MAAkBC,eAI1BoE,GAAoB1E,YAAO2E,KAAP3E,CAAH,MAEpB,qBAAGuE,SACE,gBAAGC,EAAH,EAAGA,gBAAH,OACbA,GAAoC,sBAErB,gBAAGC,EAAH,EAAGA,YAAH,OACfA,GAA4B,8BCrCjBG,GAAyD,SACrExE,GACK,IACGmE,EAA2BnE,EAA3BmE,MAAOC,EAAoBpE,EAApBoE,gBACf,OACC,gCACC,gBAACL,GAAD,MAEA,gBAACE,GAAD,eACCE,MAAOA,EACPC,gBAAiBA,EACjBK,KAAK,SACDzE,MAYK0E,GAAqE,SACjF1E,GACK,IACGyE,EAA8CzE,EAA9CyE,KAAME,EAAwC3E,EAAxC2E,YAAaR,EAA2BnE,EAA3BmE,MAAOC,EAAoBpE,EAApBoE,gBAElC,OACC,gCACC,gBAACL,GAAD,MACA,gBAACO,GAAD,eACCG,KAAMA,EACNE,YAAaA,EACbR,MAAOA,EACPC,gBAAiBA,GACbpE,MCiEO4E,GA9FgD,SAAC,GAQzD,IAPNC,EAOK,EAPLA,iBACAC,EAMK,EANLA,gBACAC,EAKK,EALLA,aACAC,EAIK,EAJLA,aACAC,EAGK,EAHLA,aACAC,EAEK,EAFLA,sBACAC,EACK,EADLA,yBAEAC,qBAAU,WACTD,EAAyBN,KACvB,CAACA,EAAkBM,IAEtB,IAAME,EAAWC,yBAAc,CAC9BC,MAAO,+BAGR,OACC,gBAAC,GAAD,KACC,gBAAC3B,GAAD,KACC,gBAAC,GAAD,0BACA,gBAACE,GAAD,KACC,gBAAC,KAAD,CACC0B,YAAahB,GACbiB,kBAAkB,IAClBC,iBAAiB,IACjBC,OAAQ,KACRxB,MAAOkB,EAAW,OAAS,QAC3BO,mBAAmB,EACnBlC,MAAOwB,EACPW,SAAUb,EACVc,aAAcb,EACdR,KAAMY,EAAY,SAAoB,UAEvC,gBAAC,IAAD,CACCU,KAAK,UACLC,KAAM,gBAACC,GAAA,EAAD,MACNxB,KAAMY,EAAW,SAAW,QAC5Ba,SACChB,IAA0BL,EAI3BsB,QAASlB,MAKZ,gBAACrB,GAAD,KACC,gBAAC,GAAD,yBACA,gBAAC,KAAD,CACCF,MAAOoB,EACPsB,YAAa,OACbX,kBAAkB,IAClBC,iBAAiB,IACjBC,OAAQ,KACRU,WAAY,SAAC3C,GAAD,OACX,gBAAC,GAAD,CACCqC,KAAK,OACL5B,MAAOkB,EAAW,OAAS,QAC3BZ,KAAMY,EAAW,SAAW,QAC5BjB,gBAAgB,UAChBkC,UAAQ,EACR5C,MAAOA,QAMX,gBAACE,GAAD,KACC,gBAAC,GAAD,sBACA,gBAAC,KAAD,CACCF,MAAOqB,EACPqB,YAAa,OACbX,kBAAkB,IAClBC,iBAAiB,IACjBC,OAAQ,KACRU,WAAY,SAAC3C,GAAD,OACX,gBAAC,GAAD,CACCS,MAAOkB,EAAW,OAAS,QAC3BU,KAAK,OACLtB,KAAMY,EAAW,SAAW,QAC5BkB,MAAM,UACNnC,gBAAgB,UAChBkC,UAAQ,EACR5C,MAAOA,UChDC8C,GAlDkE,WAAO,IAAD,EAC5B1E,mBACzD,GAFqF,mBAC/EoD,EAD+E,KACxDC,EADwD,OAI3CsB,qBAAWzF,IAA9CE,EAJ8E,EAI9EA,YAAaM,EAJiE,EAIjEA,kBAJiE,EAKjDS,sBACpCvB,EACA,CACCwB,YAAa,YAA2C,IAAZC,EAAW,EAAvCuE,2BACflF,EAAkBW,GAClBC,IAAQC,QACP,uDANGqE,EAL+E,oBAiCtF,OACC,gCACExF,EACA,gBAAC,GAAD,CACCgE,sBAAuBA,EACvBC,yBAA0BA,EAC1BN,iBAAkB3D,EAAY2D,iBAC9BC,gBAAiB5D,EAAY4D,gBAC7BC,aAAc7D,EAAY6D,aAC1BC,aAzBiB,SAAC2B,GACrB,IAAMC,EAAgBC,OACrBF,EAAMG,OAAOpD,MAAMqD,QAAQ,YAAa,KAEzC5B,EAAyByB,IAsBtB3B,aAnBiB,WACpByB,EAA2B,CAC1B3D,UAAW,CACViE,GAAI9F,EAAa8F,GACjBC,oBAAqB/B,QAiBlB,O,wgBCvDA,IAAMvF,GAAYC,IAAOC,IAAV,MAaTqH,GAAkBtH,IAAOC,IAAV,MCqDbsH,GA9CoD,SAAC,GAM7D,IALNC,EAKK,EALLA,OACAC,EAIK,EAJLA,SACAC,EAGK,EAHLA,mBACAC,EAEK,EAFLA,qBACAtC,EACK,EADLA,aAEMI,EAAWC,yBAAc,CAC9BC,MAAO,+BAGR,OACC,gBAAC,GAAD,KACEF,EAAW,yDAAuC,KACnD,gBAAC6B,GAAD,KACC,gBAAC,GAAD,CACCnB,KAAK,OACLtB,KAAMY,EAAW,SAAW,QAC5BV,YACCU,EAAW,SAAW,8BAEvBlB,MAAOkB,EAAW,UAAY,MAC9B3B,MAAO0D,EACPvB,SAAUyB,EACVxB,aAAcb,IAEf,gBAAC,GAAD,CACCc,KAAK,SACLtB,KAAMY,EAAY,SAAoB,QACtCmC,IAAK,EACL7C,YAAY,OACZjB,MAAO2D,EACPxB,SAAU0B,EACVzB,aAAcb,IAEf,gBAAC,IAAD,CACCR,KAAMY,EAAW,SAAW,QAC5BU,KAAK,UACLC,KAAM,gBAACyB,GAAA,EAAD,MACNtB,QAASlB,OCLCyC,GA5CsE,WAAO,IAAD,EAC9D5F,mBAAS,IADqD,mBACnFsF,EADmF,KAC3EO,EAD2E,OAE1D7F,mBAAS,GAFiD,mBAEnFuF,EAFmF,KAEzEO,EAFyE,OAI/CnB,qBAAWzF,IAA9CE,EAJkF,EAIlFA,YAAaM,EAJqE,EAIrEA,kBAJqE,EAK3DS,sBAAYrB,EAAyB,CACnEsB,YAAa,YAAqC,IAAZC,EAAW,EAAjC0F,qBACfrG,EAAkBW,GAClBwF,EAAU,IACVC,EAAY,IAEbE,QAAS,SAAC1E,GAAD,OAAWhB,IAAQgB,MAAMA,EAAMhB,QAAS,QAN3CyF,EALmF,oBAiC1F,OACC,gBAAC,GAAD,CACCT,OAAQA,EACRC,SAAUA,EACVC,mBAvByB,SAACS,GAC3BJ,EAAUI,EAAEjB,OAAOpD,MAAMsE,SAuBxBT,qBApB2B,SAAC7D,GAC7BkE,EAAYlE,IAoBXuB,aAjBmB,WACpB,GAAImC,EACH,OAAOS,EAAqB,CAC3B9E,UAAW,CACVkF,OAAM,OAAE/G,QAAF,IAAEA,OAAF,EAAEA,EAAa8F,GACrBI,SACAC,kBCtBUa,GATsC,WACpD,OACC,gBAAC,EAAD,KACC,gBAAC,GAAD,MACA,gBAAC,GAAD,QC+CYC,GA1CsC,WAAO,IAAD,EAC1B1B,qBAAWzF,IAAnCE,EADkD,EAClDA,YAAaI,EADqC,EACrCA,OACf8G,EAAUC,cAUhB,OACC,gBAAC,EAAD,KACC,gBAAClI,EAAD,KACC,gBAACL,EAAD,kBACA,gBAACM,EAAD,KACEc,EACA,gBAACb,EAAD,KACC,yBAAIa,EAAYoB,MAChB,gBAAC,IAAD,CAAQyD,KAAK,UAAUI,QAAS7E,GAAhC,WAKD,gBAACjB,EAAD,KACE,IACD,gBAAC,IAAD,CAAQ0F,KAAK,UAAUI,QAvBJ,WACxBiC,EAAQE,KAAK,YAsBR,SAGA,gBAAC,IAAD,CAAQvC,KAAK,OAAOI,QAtBE,WAC3BiC,EAAQE,KAAK,eAqBR,eAOJ,gBAAC,GAAD,Q,0qBCrDI,IAAM3I,GAAYC,IAAOC,IAAV,MAITC,GAAWF,IAAOC,IAAV,MAqBRM,GAAUP,IAAOC,IAAV,M,siBCrBb,IAAMF,GAAYC,IAAOC,IAAV,MAMP,qBAAG4B,eACC,UAAY,a,21CCXxB,IAAM9B,GAAYC,IAAOC,IAAV,MAYT0I,GAAc3I,IAAOC,IAAV,MAyBX2I,GAAQ5I,IAAOC,IAAV,MAuBL4I,GAAU7I,IAAOC,IAAV,M,itBCvDb,IAAMF,GAAYC,IAAOC,IAAV,MAYT6I,GAAO9I,IAAOC,IAAV,MAEI,gBAAG8I,EAAH,EAAGA,SAAU1I,EAAb,EAAaA,MAAb,OACnB0I,EAAW1I,EAAMC,YAAc,aACjB,gBAAGyI,EAAH,EAAGA,SAAUC,EAAb,EAAaA,WAAb,OACdD,GAAYC,EAAa,MAAQ,aASzB,gBAAGA,EAAH,EAAGA,WAAY3I,EAAf,EAAeA,MAAf,OACR2I,EAAa3I,EAAMC,YAAc,aC2CpB2I,GAjEwD,SAAC,GAIjE,IAHNC,EAGK,EAHLA,aACAC,EAEK,EAFLA,YACAC,EACK,EADLA,MAGC3B,EAQG2B,EARH3B,SACA4B,EAOGD,EAPHC,cACAC,EAMGF,EANHE,yBACAC,EAKGH,EALHG,cACAC,EAIGJ,EAJHI,mBACAC,EAGGL,EAHHK,8BACAC,EAEGN,EAFHM,mBACAC,EACGP,EADHO,wBAED,OACC,gBAAC,GAAD,KACC,gBAACb,GAAD,CAAMC,UAAU,GAAOG,GACN,YAAhBC,EACA,gCACC,gBAACL,GAAD,KAAOrB,GACP,gBAACqB,GAAD,KACC,gBAAC,KAAD,CACChF,MAAOuF,EACP7C,YAAa,OACbX,kBAAkB,IAClBC,iBAAiB,IACjBC,OAAQ,QAGV,gBAAC+C,GAAD,KAAOQ,EAAP,MAEkB,UAAhBH,EACH,gCACC,gBAACL,GAAD,KAAOS,GACP,gBAACT,GAAD,KACC,gBAAC,KAAD,CACChF,MAAO0F,EACPhD,YAAa,OACbX,kBAAkB,IAClBC,iBAAiB,IACjBC,OAAQ,QAIV,gBAAC+C,GAAD,KAAOW,EAAP,MAEkB,eAAhBN,EACH,gCACC,gBAACL,GAAD,CAAME,YAAY,GAAOU,GACzB,gBAACZ,GAAD,CAAME,YAAY,GACjB,gBAAC,KAAD,CACClF,MAAO6F,EACPnD,YAAa,OACbX,kBAAkB,IAClBC,iBAAiB,IACjBC,OAAQ,SAIR,OCpBQ6D,GApC0D,SAAC,GAEnE,IADNR,EACK,EADLA,MAEQS,EAAUT,EAAVS,MACR,OACC,gBAAC,GAAD,KACC,gBAAClB,GAAD,KACC,gBAACC,GAAD,KACC,kCACA,yBAAIiB,IAEL,iCACA,iCACA,+BAED,gBAAChB,GAAD,KACC,gBAAC,GAAD,CACCK,aAAa,UACbC,YAAY,UACZC,MAAOA,IAER,gBAAC,GAAD,CACCF,aAAa,QACbC,YAAY,QACZC,MAAOA,IAER,gBAAC,GAAD,CACCF,aAAa,aACbC,YAAY,aACZC,MAAOA,O,+wBCvCL,IAAMrJ,GAAYC,IAAOC,IAAV,MAsBT6J,GAAS9J,IAAOC,IAAV,MACE,kBACR,SADQ,EAAG8J,OACF,UAAY,aCXnBC,GAVgD,SAAC,GAAe,IACtED,EADqE,EAAZX,MACzDW,OACR,OACC,gBAAC,GAAD,KACC,mCACA,gBAACD,GAAD,CAAQC,OAAQA,GAASA,K,siDCRrB,IAAMhK,GAAYC,IAAOC,IAAV,MAcTgK,GAAOjK,IAAOC,IAAV,MAQJiK,GAASlK,IAAOmK,EAAV,MAUNC,GAAOpK,IAAOmK,EAAV,MAWJE,GAAQrK,IAAOC,IAAV,MAYLqK,GAAQtK,IAAOmK,EAAV,MAULI,GAAgBvK,IAAOmK,EAAV,MAKhB,gBAAGK,EAAH,EAAGA,WAAYnK,EAAf,EAAeA,MAAf,OACRmK,EAAanK,EAAMC,YAAc,SCvCpBmK,GArBwD,SAAC,GAEjE,IADNrB,EACK,EADLA,MAEQ5B,EAAuC4B,EAAvC5B,OAAQ9E,EAA+B0G,EAA/B1G,KAAMgI,EAAyBtB,EAAzBsB,MAAOC,EAAkBvB,EAAlBuB,cAC7B,OACC,gBAAC,GAAD,KACC,gBAACV,GAAD,KACC,gBAACC,GAAD,KAAS1C,GACT,gBAAC4C,GAAD,KAAO1H,IAER,gBAAC,GAAD,CAAa0G,MAAOA,IACpB,gBAACiB,GAAD,KACC,gBAACC,GAAD,UAAUI,GACV,gBAACH,GAAD,CAAeC,WAAYG,GAAiB,GAC1CA,GAAiB,EAAjB,WAAyBA,GAAkBA,EAD7C,Q,85EC5BG,IAAMC,GAAcxG,YAAH,MA0BXrE,GAAYC,IAAOC,IAAV,MAQT4K,GAAS7K,IAAOC,IAAV,MAQN6K,GAAQ9K,IAAOC,IAAV,MAYL8K,GAAQ/K,IAAOmK,EAAV,MAER,SAAC/J,GAAD,OAAWA,EAAMC,MAAMC,eAWpBE,GAAUR,IAAOC,IAAV,MAgBR,qBAAGI,MAAkBC,eACd,qBAAGD,MAAkBC,eAGtB,qBAAGD,MAAkBC,eC4BxB0K,GAtF4C,SAAC,GASrD,IARNxD,EAQK,EARLA,OACAC,EAOK,EAPLA,SACAoC,EAMK,EANLA,MACAlC,EAKK,EALLA,qBACAsD,EAIK,EAJLA,kBACAC,EAGK,EAHLA,oBACAC,EAEK,EAFLA,kBACAC,EACK,EADLA,YAEM3F,EAAWC,yBAAc,CAC9BC,MAAO,+BAGR,OACC,gBAAC,GAAD,KACC,gBAACiF,GAAD,MACA,gBAACC,GAAD,KACC,gBAACC,GAAD,KACC,gBAACC,GAAD,eACA,gBAAC,GAAD,CACClG,KAAMY,EAAW,SAAW,QAC5BiB,UAAQ,EACR5C,MAAO0D,KAGT,gBAACsD,GAAD,KACC,gBAACC,GAAD,iBACA,gBAAC,GAAD,CACClG,KAAMY,EAAW,SAAW,QAC5BlB,MAAM,OACNT,MAAO2D,EACPxB,SAAU0B,KAGZ,gBAACmD,GAAD,KACC,gBAACC,GAAD,cACA,gBAAC,GAAD,CACClG,KAAMY,EAAW,SAAW,QAC5BlB,MAAM,OACNqD,IAAK,EACLyD,IAAK,GACLvH,MAAO+F,EACP5D,SAAUgF,MAIb,gBAAC,GAAD,KACC,gBAAC,IAAD,CACC9E,KAAK,UACLtB,KAAMY,EAAW,SAAW,QAC5BW,KAAM,gBAACC,GAAA,EAAD,MACNE,QAAS4E,GAJV,gBAQA,gBAAC,IAAD,CACChF,KAAK,UACLtB,KAAMY,EAAW,SAAW,QAC5BW,KAAM,gBAACkF,GAAA,EAAD,MACN/E,QAAS6E,GAJV,mBASA,gBAAC,KAAD,CACCG,UAAW9F,EAAW,MAAQ,WAC9B+F,MAAM,kEACNC,OAAO,MACPC,WAAW,KACXC,UAAU,aACVC,UAAWV,GAEX,gBAAC,IAAD,CACC/E,KAAK,UACLtB,KAAMY,EAAW,SAAW,QAC5BW,KAAM,gBAACyF,GAAA,EAAD,OAHP,cCzBUC,GA9D8D,SAAC,GAEvE,IADN1C,EACK,EADLA,MACK,EACY2C,WAAuB3C,EAAM5B,QAAvCA,EADF,sBAE2BuE,WAAuB3C,EAAM3B,UAFxD,mBAEEA,EAFF,KAEYO,EAFZ,OAGqB+D,WAAuB3C,EAAMS,OAHlD,mBAGEA,EAHF,KAGSmC,EAHT,OAKsCD,aAAiB3K,IAApDE,EALH,EAKGA,YAAaM,EALhB,EAKgBA,kBALhB,EAMmBS,sBAAYpB,EAAiB,CACpDkC,UAAW,CACVkF,OAAM,OAAE/G,QAAF,IAAEA,OAAF,EAAEA,EAAa8F,GACrB6E,QAAS7C,EAAMhC,GACfyC,QACApC,YAEDnF,YAAa,YAA8B,IAAZC,EAAW,EAA1B2J,cACftK,EAAkBW,GAClBC,IAAQC,QAAQ,2CATXyJ,EANF,sBAkBqB7J,sBAAYnB,EAAmB,CACxDiC,UAAW,CAAEkF,OAAM,OAAE/G,QAAF,IAAEA,OAAF,EAAEA,EAAa8F,GAAI6E,QAAS7C,EAAMhC,IACrD9E,YAAa,gBAAoBC,EAApB,EAAG4J,gBAAH,OAA+BvK,EAAkBW,MAFxD4J,EAlBF,oBA8CL,OACC,gBAAC,GAAD,CACC3E,OAAQA,EACRC,SAAUA,EACVoC,MAAOA,EACPlC,qBA5B2B,SAAC7D,GAC7BkE,EAAYlE,IA4BXmH,kBAzBwB,SAACnH,GAC1BkI,EAASlI,IAyBRoH,oBAhB0B,WAC3BiB,IACA3J,IAAQC,QAAQ,wCAef0I,kBAZwB,WACzBe,KAYCd,YAxBkB,WAAO,IAClB3D,EAAoB2B,EAApB3B,SAAUoC,EAAUT,EAAVS,MAClB7B,EAAYP,GACZuE,EAASnC,OCrBIuC,GAlB4C,SAAC,GAGrD,IAFNhD,EAEK,EAFLA,MACAvH,EACK,EADLA,eAEA,OACC,gBAAC,GAAD,CAAWA,eAAgBA,GACzBA,EACA,gBAAC,GAAD,CAAWuH,MAAOA,IAElB,gCACC,gBAAC,GAAD,CAAiBA,MAAOA,IACxB,gBAAC,GAAD,CAAkBA,MAAOA,IAAU,O,s2DCvBjC,IAAMwB,GAAcxG,YAAH,MAqDXrE,GAAYC,IAAOC,IAAV,MAMT4K,GAAS7K,IAAOC,IAAV,MAYN6K,GAAQ9K,IAAOC,IAAV,MAgBL8K,GAAQ/K,IAAOmK,EAAV,MAER,SAAC/J,GAAD,OAAWA,EAAMC,MAAMC,eC4BlB+L,GAvF0C,SAAC,GAWnD,IAVN7E,EAUK,EAVLA,OACAC,EASK,EATLA,SACAoC,EAQK,EARLA,MACAyC,EAOK,EAPLA,QACA5E,EAMK,EANLA,mBACAC,EAKK,EALLA,qBACAsD,EAIK,EAJLA,kBACAsB,EAGK,EAHLA,iBACAC,EAEK,EAFLA,gBACAC,EACK,EADLA,aAEMhH,EAAWC,yBAAc,CAC9BC,MAAO,8BAGF+G,EAAahH,yBAAc,CAChCC,MAAO,8BAGR,OACC,gCACC,gBAAC,GAAD,MACA,gBAAC,IAAD,CACCQ,KAAK,UACLtB,KAAMY,EAAW,SAAW,QAC5Bc,QAASiG,EACTpG,KAAM,gBAACyB,GAAA,EAAD,OAEL6E,EAAa,KAAO,OAEtB,gBAAC,GAAD,KACC,gBAAC,KAAD,CACClB,MAAM,wEACNmB,UAAQ,EACRL,QAASA,EACTM,KAAML,EACNM,SAAUJ,EACVd,UAAU,QACVmB,UAAU,EACVvI,MAAM,QACNwI,cAAe,CAAE3G,KAAM,gBAAC4G,GAAA,EAAD,MAAmBnI,KAAM,SAChDoI,kBAAmB,CAClB7G,KAAM,gBAACkF,GAAA,EAAD,MACNzG,KAAM,UAGP,gBAAC,GAAD,KACC,gBAAC,GAAD,KACC,gBAAC,GAAD,eACA,gBAAC,GAAD,CACCf,MAAO0D,EACPvB,SAAUyB,EACV3C,YAAY,QACZmB,aAAcqG,KAGhB,gBAAC,GAAD,KACC,gBAAC,GAAD,iBACA,gBAAC,GAAD,CACC1H,KAAK,QACLN,MAAM,OACNqD,IAAK,EACL9D,MAAO2D,EACPxB,SAAU0B,EACVzB,aAAcqG,KAGhB,gBAAC,GAAD,KACC,gBAAC,GAAD,cACA,gBAAC,GAAD,CACC1H,KAAK,QACLN,MAAM,OACNqD,IAAK,EACLyD,IAAK,GACLvH,MAAO+F,EACP5D,SAAUgF,EACV/E,aAAcqG,UC/BPW,GApE4D,WAAO,IAAD,EACpDhL,mBAAiB,IADmC,mBACzEsF,EADyE,KACjEO,EADiE,OAEhD7F,mBAAiB,GAF+B,mBAEzEuF,EAFyE,KAE/DO,EAF+D,OAGtD9F,mBAAiB,GAHqC,mBAGzE2H,EAHyE,KAGlEmC,EAHkE,OAIlD9J,oBAAS,GAJyC,mBAIzEoK,EAJyE,KAIhEa,EAJgE,OAMrCtG,qBAAWzF,IAA9CE,EANwE,EAMxEA,YAAaM,EAN2D,EAM3DA,kBAN2D,EAOtDS,sBAAYtB,EAAoB,CACzDoC,UAAW,CACVkF,OAAM,OAAE/G,QAAF,IAAEA,OAAF,EAAEA,EAAa8F,GACrBI,SACAC,WACAoC,SAEDvH,YAAa,YAAgC,IAAZC,EAAW,EAA5B6K,gBACfxL,EAAkBW,GAClBwF,EAAU,IACVC,EAAY,GACZgE,EAAS,GACTmB,GAAW,GACX3K,IAAQC,QAAQ,sCAEjByF,QAAS,SAAC1E,GAAD,OAAWhB,IAAQgB,MAAMA,EAAMhB,YAflC4K,EAPyE,oBAoDhF,OACC,gBAAC,GAAD,CACC5F,OAAQA,EACRC,SAAUA,EACVoC,MAAOA,EACPyC,QAASA,EACT5E,mBAjCyB,SAACS,GAC3BJ,EAAUI,EAAEjB,OAAOpD,QAiClB6D,qBA1B2B,SAAC7D,GAC7BkE,EAAYlE,IA0BXmH,kBAvBwB,SAACnH,GAC1BkI,EAASlI,IAuBRyI,iBAhCuB,WACxBa,KAgCCZ,gBArBsB,WACvBW,GAAW,IAqBVV,aAlBmB,WACpBU,GAAW,GACXpF,EAAU,IACVC,EAAY,GACZgE,EAAS,OCDIqB,GA9CyB,WAAO,IAAD,EACcxG,qBAC1DzF,IADOE,EADqC,EACrCA,YAAaO,EADwB,EACxBA,eAAgBC,EADQ,EACRA,kBAQ/B2D,EAAWC,yBAAc,CAC9BC,MAAO,8BAGF+G,EAAahH,yBAAc,CAChCC,MAAO,8BAGR,OACC,gBAAC,GAAD,KACC,gBAAC,GAAD,KACC,mCACA,gBAAC,GAAD,MACA,gBAAC,IAAD,CACCd,KAAMY,EAAW,SAAW,QAC5BU,KAAK,UACLC,KAAMvE,EAAiB,gBAACmL,GAAA,EAAD,MAAoB,gBAACM,GAAA,EAAD,MAC3C/G,QArB+B,WAClCzE,GAAoBD,KAsBhB6K,EAAa,KAAO7K,EAAiB,OAAS,SAGjD,gBAAC,GAAD,KACEP,EACEA,EAAaiM,OAAOC,KAAI,SAACpE,GAAD,OACxB,gBAAC,GAAD,CACCqE,IAAKrE,EAAMhC,GACXgC,MAAOA,EACPvH,eAAgBA,OAGjB,QClCQ6L,GAT0C,WACxD,OACC,gBAAC3N,EAAD,KACC,gBAAC,GAAD,MACA,gBAAC,GAAD,Q,qiBCXI,IAAMA,GAAYC,IAAOC,IAAV,MAUTM,GAAUP,IAAOC,IAAV,M,sHCLb,IAAM0N,GAAe3N,YAAO4N,IAAP5N,CAAH,MACV,gBAAG6N,EAAH,EAAGA,SAAUxN,EAAb,EAAaA,MAAb,OACbwN,EAAW,gBAAkBxN,EAAMC,eAC3B,gBAAGuN,EAAH,EAAGA,SAAUxN,EAAb,EAAaA,MAAb,OAA0BwN,EAAWxN,EAAMC,YAAc,UCIpDwN,GALkD,SAAC1N,GAAW,IACpEyN,EAAsBzN,EAAtByN,SAAaE,EADsD,aAC7C3N,EAD6C,cAE3E,OAAO,gBAACuN,GAAD,iBAAkBI,EAAlB,CAAwBF,SAAUA,MCsF3BG,GA/E4C,WAAO,IAAD,EACtC9L,mBAAS,IAD6B,mBACzDc,EADyD,KAClDiL,EADkD,OAEhC/L,mBAAS,IAFuB,mBAEzDe,EAFyD,KAE/CiL,EAF+C,OAIDrH,qBAC9DzF,IADOG,EAJwD,EAIxDA,qBAAsBC,EAJkC,EAIlCA,gBAAiBF,EAJiB,EAIjBA,YAGzCkH,EAAUC,cAEhBjD,qBAAU,WACLlE,GAAakH,EAAQE,KAAK,OAC5B,CAACpH,EAAakH,IAwBjB,OACC,gBAAC,GAAD,KACC,gBAAC,GAAD,KACC,oDACA,gBAAC,GAAD,CACCrC,KAAK,QACLpB,YAAY,SACZkB,SA7BsB,SAACkC,GAC1B8F,EAAS9F,EAAEjB,OAAOpD,UA8BhB,gBAAC,GAAD,CACCqC,KAAK,WACLpB,YAAY,WACZkB,SA9ByB,SAACkC,GAC7B+F,EAAY/F,EAAEjB,OAAOpD,UA+BnB,gBAAC,IAAD,CAAQqC,KAAK,UAAUI,QA5BS,WAClChF,EAAqByB,EAAOC,KA2B1B,SAGA,gBAAC,KAAD,CACCkL,SAAUC,4EACVC,WAAW,QACXC,UA9B0B,SAC7BC,GAEA/M,EAAgB+M,IA4BbC,aAAc,qBACdC,OAAQ,gBAAGlI,EAAH,EAAGA,QAAH,OACP,gBAAC,IAAD,CACCJ,KAAK,UACLC,KAAM,gBAACsI,GAAA,EAAD,MACNnI,QAASA,GAHV,wBASF,gBAAC,GAAD,CACCJ,KAAK,UACL0H,UAAU,EACVtH,QAvC0B,WAC7BiC,EAAQE,KAAK,eAmCX,wBCzDWiG,GAlBoD,SAAC,GAE7D,IADN1M,EACK,EADLA,SACK,EAC8C4E,qBAAWzF,IAAtDO,EADH,EACGA,iBAAkBL,EADrB,EACqBA,YAAaS,EADlC,EACkCA,QACjCyG,EAAUC,cAWhB,OATAjD,qBAAU,WACT7D,MAEE,IAEH6D,qBAAU,WACJzD,GAAYT,GAAakH,EAAQE,KAAK,YACzC,CAACpH,EAAakH,EAASzG,IAEnB,gCAAGA,EAAU,KAAOE,I,qhBCvBrB,IAAMlC,GAAYC,IAAOC,IAAV,MAUTM,GAAUP,IAAOC,IAAV,MC6EL2O,GA5EkD,WAAO,IAAD,EAC9C1M,mBAAS,IADqC,mBAC/DQ,EAD+D,KACzDmM,EADyD,OAE5C3M,mBAAS,IAFmC,mBAE/Dc,EAF+D,KAExDiL,EAFwD,OAGtC/L,mBAAS,IAH6B,mBAG/De,EAH+D,KAGrDiL,EAHqD,OAKpCrH,qBAAWzF,IAArCK,EAL8D,EAK9DA,SAAUH,EALoD,EAKpDA,YACZkH,EAAUC,cAEhBjD,qBAAU,WACLlE,GAAakH,EAAQE,KAAK,OAC5B,CAACpH,EAAakH,IA6BjB,OACC,gBAAC,GAAD,KACC,gBAAC,GAAD,KACC,gGAIA,gBAAC,GAAD,CACCzD,YAAY,OACZoB,KAAK,UACLF,SArCqB,SAACkC,GACzB0G,EAAQ1G,EAAEjB,OAAOpD,UAsCf,gBAAC,GAAD,CACCiB,YAAY,SACZoB,KAAK,UACLF,SAvCsB,SAACkC,GAC1B8F,EAAS9F,EAAEjB,OAAOpD,UAwChB,gBAAC,GAAD,CACCqC,KAAK,WACLpB,YAAY,WACZkB,SAxCyB,SAACkC,GAC7B+F,EAAY/F,EAAEjB,OAAOpD,UAyCnB,gBAAC,IAAD,CAAQqC,KAAK,UAAUI,QAlCL,WACf7D,GAASM,GAAUC,EAIpBA,EAAS6L,OAAS,EACrBtM,IAAQuM,KAAK,oDAGdtN,EAASiB,EAAMM,EAAOC,GAPrBT,IAAQuM,KAAK,qCAgCZ,YAGA,gBAAC,GAAD,CACC5I,KAAK,UACL0H,UAAQ,EACRtH,QA5CqB,WACxBiC,EAAQE,KAAK,YAwCX,gCC7CWsG,GApBgC,WAC9C,OACC,gBAAC,IAAD,KACC,gBAAC,IAAD,KACC,gBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UACjB,gBAAC,GAAD,OAED,gBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aACjB,gBAAC,GAAD,OAED,gBAAC,GAAD,KACC,gBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,KACjB,gBAAC,GAAD,W,kmBCtBC,IAAMtE,GAAcxG,YAAH,MCUlB+K,GAAWC,yBAAe,CAC/BC,IAAI,GAAD,OAAKjB,2CAAL,cAGEkB,GAAWC,aAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAC3BC,EAAQpM,aAAaqM,QAAQ,aACnC,MAAO,CACNF,QAAQ,eACJA,EADG,CAENG,cAAeF,EAAK,iBAAaA,GAAU,SAKxCG,GAAS,IAAIC,eAAa,CAC/BC,KAAMT,GAASU,OAAOb,IACtBc,MAAO,IAAIC,gBAAc,CACxBC,aAAc,CACbC,KAAM,CACLC,WAAW,GAEZC,MAAO,CACND,WAAW,GAEZE,UAAW,CACVF,WAAW,GAEZG,SAAU,CACTH,WAAW,QAMfI,IAAShC,OACR,kBAAC,IAAD,CAAepO,MAAO,CAAEC,YAAa,YACpC,kBAAC,GAAD,MACA,kBAAC,iBAAD,CAAgBuP,OAAQA,IACvB,kBAAC,GAAD,KACC,kBAAC,GAAD,SAIHa,SAASC,eAAe,W","file":"static/js/main.19656249.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\theight: 100%;\r\n\tpadding: 3rem 5rem;\r\n\r\n\t@media (max-width: 768px) {\r\n\t\tpadding: 2rem 1.5rem;\r\n\t}\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tmargin: auto;\r\n`;\r\n\r\nexport const Headline = styled.h1`\r\n\tdisplay: inline-block;\r\n\tcolor: #eee;\r\n\tborder-bottom: 3px solid ${(props) => props.theme.primaryBlue};\r\n\tpadding: 0.2rem 1rem;\r\n\tfont-weight: 400;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\twidth: 100%;\r\n\r\n\t@media (max-width: 320px) {\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t}\r\n`;\r\n\r\nexport const Buttons = styled.div`\r\n\tdisplay: flex;\r\n`;\r\n\r\nexport const ButtonsContent = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\r\n\tp {\r\n\t\tmargin: 0;\r\n\t\tmargin-right: 1rem;\r\n\t\tfont-size: 1rem;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\tflex-direction: column;\r\n\r\n\t\tp {\r\n\t\t\tmargin-right: 0;\r\n\t\t\tmargin-bottom: 0.2rem;\r\n\t\t}\r\n\t}\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\twidth: 100%;\r\n\tmargin: 0.7rem 0;\r\n\tdisplay: flex;\r\n\r\n\t@media (max-width: 1024px) {\r\n\t\tflex-direction: column;\r\n\t}\r\n`;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_WITH_CREDENTIALS = gql`\r\n\tmutation LoginUser($email: String!, $password: String!) {\r\n\t\tloginWithCredentials(email: $email, password: $password) {\r\n\t\t\tuser {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\temail\r\n\t\t\t\tpassword\r\n\t\t\t\tinvestedBalance\r\n\t\t\t\tavailableBalance\r\n\t\t\t\ttotalBalance\r\n\t\t\t\tstocks(sortBy: \"totalInvestedAdjustment\") {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tname\r\n\t\t\t\t\tsymbol\r\n\t\t\t\t\tprice\r\n\t\t\t\t\tquantity\r\n\t\t\t\t\tchangePercent\r\n\t\t\t\t\tpercentageOfThePortfolio\r\n\t\t\t\t\ttotalInvested\r\n\t\t\t\t\tupdatedAt\r\n\t\t\t\t\tscore\r\n\t\t\t\t\tidealPercentageOfThePortfolio\r\n\t\t\t\t\tidealTotalInvested\r\n\t\t\t\t\tidealQuantity\r\n\t\t\t\t\tquantityAdjustment\r\n\t\t\t\t\ttotalInvestedAdjustment\r\n\t\t\t\t\tstatus\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tauthToken\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const LOGIN_WITH_GOOGLE = gql`\r\n\tmutation loginWithGoogle(\r\n\t\t$email: String!\r\n\t\t$name: String!\r\n\t\t$googleId: String!\r\n\t) {\r\n\t\tloginWithGoogle(email: $email, name: $name, googleId: $googleId) {\r\n\t\t\tuser {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\temail\r\n\t\t\t\tpassword\r\n\t\t\t\tinvestedBalance\r\n\t\t\t\tavailableBalance\r\n\t\t\t\ttotalBalance\r\n\t\t\t\tstocks(sortBy: \"totalInvestedAdjustment\") {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tname\r\n\t\t\t\t\tsymbol\r\n\t\t\t\t\tprice\r\n\t\t\t\t\tquantity\r\n\t\t\t\t\tchangePercent\r\n\t\t\t\t\tpercentageOfThePortfolio\r\n\t\t\t\t\ttotalInvested\r\n\t\t\t\t\tupdatedAt\r\n\t\t\t\t\tscore\r\n\t\t\t\t\tidealPercentageOfThePortfolio\r\n\t\t\t\t\tidealTotalInvested\r\n\t\t\t\t\tidealQuantity\r\n\t\t\t\t\tquantityAdjustment\r\n\t\t\t\t\ttotalInvestedAdjustment\r\n\t\t\t\t\tstatus\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tauthToken\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const REGISTER = gql`\r\n\tmutation Register($name: String!, $email: String!, $password: String!) {\r\n\t\tregister(name: $name, email: $email, password: $password) {\r\n\t\t\tuser {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\temail\r\n\t\t\t\tpassword\r\n\t\t\t\tinvestedBalance\r\n\t\t\t\tavailableBalance\r\n\t\t\t\ttotalBalance\r\n\t\t\t\tstocks(sortBy: \"totalInvestedAdjustment\") {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tname\r\n\t\t\t\t\tsymbol\r\n\t\t\t\t\tprice\r\n\t\t\t\t\tquantity\r\n\t\t\t\t\tchangePercent\r\n\t\t\t\t\tpercentageOfThePortfolio\r\n\t\t\t\t\ttotalInvested\r\n\t\t\t\t\tupdatedAt\r\n\t\t\t\t\tscore\r\n\t\t\t\t\tidealPercentageOfThePortfolio\r\n\t\t\t\t\tidealTotalInvested\r\n\t\t\t\t\tidealQuantity\r\n\t\t\t\t\tquantityAdjustment\r\n\t\t\t\t\ttotalInvestedAdjustment\r\n\t\t\t\t\tstatus\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tauthToken\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const CHANGE_USER_AVAILABLE_BALANCE = gql`\r\n\tmutation ChangeUserAvailableBalance(\r\n\t\t$id: String!\r\n\t\t$newAvailableBalance: Float!\r\n\t) {\r\n\t\tchangeUserAvailableBalance(\r\n\t\t\tid: $id\r\n\t\t\tnewAvailableBalance: $newAvailableBalance\r\n\t\t) {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t\temail\r\n\t\t\tpassword\r\n\t\t\tinvestedBalance\r\n\t\t\tavailableBalance\r\n\t\t\ttotalBalance\r\n\t\t\tstocks(sortBy: \"totalInvestedAdjustment\") {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tsymbol\r\n\t\t\t\tprice\r\n\t\t\t\tquantity\r\n\t\t\t\tchangePercent\r\n\t\t\t\tpercentageOfThePortfolio\r\n\t\t\t\ttotalInvested\r\n\t\t\t\tupdatedAt\r\n\t\t\t\tscore\r\n\t\t\t\tidealPercentageOfThePortfolio\r\n\t\t\t\tidealTotalInvested\r\n\t\t\t\tidealQuantity\r\n\t\t\t\tquantityAdjustment\r\n\t\t\t\ttotalInvestedAdjustment\r\n\t\t\t\tstatus\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const ADD_NEW_USER_STOCK = gql`\r\n\tmutation addNewUserStock(\r\n\t\t$userId: String!\r\n\t\t$symbol: String!\r\n\t\t$quantity: Float!\r\n\t\t$score: Float!\r\n\t) {\r\n\t\taddNewUserStock(\r\n\t\t\tuserId: $userId\r\n\t\t\tsymbol: $symbol\r\n\t\t\tquantity: $quantity\r\n\t\t\tscore: $score\r\n\t\t) {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t\temail\r\n\t\t\tpassword\r\n\t\t\tinvestedBalance\r\n\t\t\tavailableBalance\r\n\t\t\ttotalBalance\r\n\t\t\tstocks(sortBy: \"totalInvestedAdjustment\") {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tsymbol\r\n\t\t\t\tprice\r\n\t\t\t\tquantity\r\n\t\t\t\tchangePercent\r\n\t\t\t\tpercentageOfThePortfolio\r\n\t\t\t\ttotalInvested\r\n\t\t\t\tupdatedAt\r\n\t\t\t\tscore\r\n\t\t\t\tidealPercentageOfThePortfolio\r\n\t\t\t\tidealTotalInvested\r\n\t\t\t\tidealQuantity\r\n\t\t\t\tquantityAdjustment\r\n\t\t\t\ttotalInvestedAdjustment\r\n\t\t\t\tstatus\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const ADD_EXISTING_USER_STOCK = gql`\r\n\tmutation addExistingUserStock(\r\n\t\t$userId: String!\r\n\t\t$symbol: String!\r\n\t\t$quantity: Float!\r\n\t) {\r\n\t\taddExistingUserStock(\r\n\t\t\tuserId: $userId\r\n\t\t\tsymbol: $symbol\r\n\t\t\tquantity: $quantity\r\n\t\t) {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t\temail\r\n\t\t\tpassword\r\n\t\t\tinvestedBalance\r\n\t\t\tavailableBalance\r\n\t\t\ttotalBalance\r\n\t\t\tstocks(sortBy: \"totalInvestedAdjustment\") {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tsymbol\r\n\t\t\t\tprice\r\n\t\t\t\tquantity\r\n\t\t\t\tchangePercent\r\n\t\t\t\tpercentageOfThePortfolio\r\n\t\t\t\ttotalInvested\r\n\t\t\t\tupdatedAt\r\n\t\t\t\tscore\r\n\t\t\t\tidealPercentageOfThePortfolio\r\n\t\t\t\tidealTotalInvested\r\n\t\t\t\tidealQuantity\r\n\t\t\t\tquantityAdjustment\r\n\t\t\t\ttotalInvestedAdjustment\r\n\t\t\t\tstatus\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const EDIT_USER_STOCK = gql`\r\n\tmutation editUserStock(\r\n\t\t$userId: String!\r\n\t\t$stockId: String!\r\n\t\t$score: Float\r\n\t\t$quantity: Float\r\n\t) {\r\n\t\teditUserStock(\r\n\t\t\tuserId: $userId\r\n\t\t\tstockId: $stockId\r\n\t\t\tscore: $score\r\n\t\t\tquantity: $quantity\r\n\t\t) {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t\temail\r\n\t\t\tinvestedBalance\r\n\t\t\tavailableBalance\r\n\t\t\ttotalBalance\r\n\t\t\tstocks(sortBy: \"totalInvestedAdjustment\") {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tsymbol\r\n\t\t\t\tprice\r\n\t\t\t\tquantity\r\n\t\t\t\tchangePercent\r\n\t\t\t\tpercentageOfThePortfolio\r\n\t\t\t\ttotalInvested\r\n\t\t\t\tupdatedAt\r\n\t\t\t\tscore\r\n\t\t\t\tidealPercentageOfThePortfolio\r\n\t\t\t\tidealTotalInvested\r\n\t\t\t\tidealQuantity\r\n\t\t\t\tquantityAdjustment\r\n\t\t\t\ttotalInvestedAdjustment\r\n\t\t\t\tstatus\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const DELETE_USER_STOCK = gql`\r\n\tmutation deleteUserStock($userId: String!, $stockId: String!) {\r\n\t\tdeleteUserStock(userId: $userId, stockId: $stockId) {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t\temail\r\n\t\t\tinvestedBalance\r\n\t\t\tavailableBalance\r\n\t\t\ttotalBalance\r\n\t\t\tstocks(sortBy: \"totalInvestedAdjustment\") {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tsymbol\r\n\t\t\t\tprice\r\n\t\t\t\tquantity\r\n\t\t\t\tchangePercent\r\n\t\t\t\tpercentageOfThePortfolio\r\n\t\t\t\ttotalInvested\r\n\t\t\t\tupdatedAt\r\n\t\t\t\tscore\r\n\t\t\t\tidealPercentageOfThePortfolio\r\n\t\t\t\tidealTotalInvested\r\n\t\t\t\tidealQuantity\r\n\t\t\t\tquantityAdjustment\r\n\t\t\t\ttotalInvestedAdjustment\r\n\t\t\t\tstatus\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const GET_USER_PROFILE = gql`\r\n\tquery GetUserProfile {\r\n\t\tme {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t\temail\r\n\t\t\tinvestedBalance\r\n\t\t\tavailableBalance\r\n\t\t\ttotalBalance\r\n\t\t\tstocks(sortBy: \"totalInvestedAdjustment\") {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tprice\r\n\t\t\t\tsymbol\r\n\t\t\t\tpercentageOfThePortfolio\r\n\t\t\t\tchangePercent\r\n\t\t\t\tmarketCap\r\n\t\t\t\ttotalInvested\r\n\t\t\t\tupdatedAt\r\n\t\t\t\tquantity\r\n\t\t\t\tscore\r\n\t\t\t\tidealPercentageOfThePortfolio\r\n\t\t\t\tidealTotalInvested\r\n\t\t\t\tidealQuantity\r\n\t\t\t\tquantityAdjustment\r\n\t\t\t\ttotalInvestedAdjustment\r\n\t\t\t\tstatus\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const GET_USER_BALANCE_INFO = gql`\r\n\tquery GetUserBalanceInfo {\r\n\t\tuser(id: \"5f7d176dad6b0f36440cb08b\") {\r\n\t\t\tid\r\n\t\t\tavailableBalance\r\n\t\t\tinvestedBalance\r\n\t\t\ttotalBalance\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const GET_USER_STOCKS = gql`\r\n\tquery GetUserStocks {\r\n\t\tuser(id: \"5f7d176dad6b0f36440cb08b\") {\r\n\t\t\tid\r\n\t\t\tstocks(sortBy: \"totalInvestedAdjustment\") {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tprice\r\n\t\t\t\tsymbol\r\n\t\t\t\tpercentageOfThePortfolio\r\n\t\t\t\tchangePercent\r\n\t\t\t\tmarketCap\r\n\t\t\t\ttotalInvested\r\n\t\t\t\tupdatedAt\r\n\t\t\t\tquantity\r\n\t\t\t\tscore\r\n\t\t\t\tidealPercentageOfThePortfolio\r\n\t\t\t\tidealTotalInvested\r\n\t\t\t\tidealQuantity\r\n\t\t\t\tquantityAdjustment\r\n\t\t\t\ttotalInvestedAdjustment\r\n\t\t\t\tstatus\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n","import { useMutation, useQuery } from '@apollo/client';\r\nimport { message } from 'antd';\r\nimport * as React from 'react';\r\nimport { createContext, ReactNode, useState } from 'react';\r\nimport { GoogleLoginResponse } from 'react-google-login';\r\n\r\nimport {\r\n\tLOGIN_WITH_CREDENTIALS,\r\n\tLOGIN_WITH_GOOGLE,\r\n\tREGISTER,\r\n} from '../graphql/mutations/server-mutations';\r\nimport { GET_USER_PROFILE } from '../graphql/queries/server-queries';\r\nimport { User } from '../helpers/types/user.types';\r\n\r\ninterface ContextProps {\r\n\tcurrentUser: User | null;\r\n\tloginWithCredentials: (\r\n\t\temail: string,\r\n\t\tpassword: string\r\n\t) => Promise<void> | void;\r\n\tloginWithGoogle: (\r\n\t\tgoogleResponse: GoogleLoginResponse\r\n\t) => Promise<void> | void;\r\n\tregister: (\r\n\t\tname: string,\r\n\t\temail: string,\r\n\t\tpassword: string\r\n\t) => Promise<void> | void;\r\n\tlogout: () => void;\r\n\tcheckUserSession: () => Promise<void> | void;\r\n\tupdateCurrentUser: (user: User) => Promise<void> | void;\r\n\teditableStocks: boolean;\r\n\tsetEditableStocks: React.Dispatch<React.SetStateAction<boolean>> | null;\r\n\tloading: boolean;\r\n}\r\n\r\nexport const UserContext = createContext<ContextProps>({\r\n\tcurrentUser: null,\r\n\tloginWithCredentials: () => {},\r\n\tloginWithGoogle: () => {},\r\n\tregister: () => {},\r\n\tlogout: () => {},\r\n\tcheckUserSession: () => {},\r\n\tupdateCurrentUser: () => {},\r\n\teditableStocks: false,\r\n\tsetEditableStocks: null,\r\n\tloading: true,\r\n});\r\n\r\nexport interface UserContextProviderProps {\r\n\tchildren: ReactNode;\r\n}\r\n\r\nconst UserContextProvider: React.FunctionComponent<UserContextProviderProps> = ({\r\n\tchildren,\r\n}) => {\r\n\tconst [currentUser, setCurrentUser] = useState<User | null>(null);\r\n\tconst [editableStocks, setEditableStocks] = useState(false);\r\n\tconst [loading, setLoading] = useState(true);\r\n\r\n\tconst [loginWithCredentialsMutation] = useMutation(LOGIN_WITH_CREDENTIALS, {\r\n\t\tonCompleted: ({ loginWithCredentials: { user } }) =>\r\n\t\t\tmessage.success(`Welcome back, ${user.name}!`),\r\n\t});\r\n\tconst [loginWithGoogleMutation] = useMutation(LOGIN_WITH_GOOGLE, {\r\n\t\tonCompleted: ({ loginWithGoogle: { user } }) =>\r\n\t\t\tmessage.success(`Welcome, ${user.name}!`),\r\n\t});\r\n\tconst [registerMutation] = useMutation(REGISTER, {\r\n\t\tonCompleted: ({ register: { user } }) =>\r\n\t\t\tmessage.success(`Welcome, ${user.name}!`),\r\n\t});\r\n\tconst { refetch } = useQuery(GET_USER_PROFILE);\r\n\r\n\tconst loginWithCredentials = async (email: string, password: string) => {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tloginWithCredentials: { user, authToken },\r\n\t\t\t\t},\r\n\t\t\t} = await loginWithCredentialsMutation({\r\n\t\t\t\tvariables: { email, password },\r\n\t\t\t});\r\n\r\n\t\t\tsetCurrentUser(user);\r\n\t\t\tlocalStorage.setItem('authToken', authToken);\r\n\t\t} catch (err) {\r\n\t\t\tmessage.error(err.message);\r\n\t\t}\r\n\t};\r\n\r\n\tconst loginWithGoogle = async (googleResponse: GoogleLoginResponse) => {\r\n\t\tconst {\r\n\t\t\tprofileObj: { name, email, googleId },\r\n\t\t} = googleResponse;\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tloginWithGoogle: { user, authToken },\r\n\t\t\t\t},\r\n\t\t\t} = await loginWithGoogleMutation({\r\n\t\t\t\tvariables: { name, email, googleId },\r\n\t\t\t});\r\n\r\n\t\t\tsetCurrentUser(user);\r\n\t\t\tlocalStorage.setItem('authToken', authToken);\r\n\t\t} catch (err) {\r\n\t\t\tmessage.error(err.message);\r\n\t\t}\r\n\t};\r\n\r\n\tconst register = async (name: string, email: string, password: string) => {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tregister: { user, authToken },\r\n\t\t\t\t},\r\n\t\t\t} = await registerMutation({\r\n\t\t\t\tvariables: { name, email, password },\r\n\t\t\t});\r\n\r\n\t\t\tsetCurrentUser(user);\r\n\t\t\tlocalStorage.setItem('authToken', authToken);\r\n\t\t} catch (err) {\r\n\t\t\tmessage.error(err.message);\r\n\t\t}\r\n\t};\r\n\r\n\tconst logout = () => {\r\n\t\tlocalStorage.removeItem('authToken');\r\n\t\tsetCurrentUser(null);\r\n\t};\r\n\r\n\tconst checkUserSession = async () => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst {\r\n\t\t\t\tdata: { me: user },\r\n\t\t\t} = await refetch();\r\n\t\t\tif (user) setCurrentUser(user);\r\n\t\t\tsetLoading(false);\r\n\t\t} catch (err) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetCurrentUser(null);\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateCurrentUser = async (user: User) => {\r\n\t\tsetCurrentUser(user);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<UserContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tcurrentUser,\r\n\t\t\t\tloginWithCredentials,\r\n\t\t\t\tloginWithGoogle,\r\n\t\t\t\tregister,\r\n\t\t\t\tlogout,\r\n\t\t\t\tcheckUserSession,\r\n\t\t\t\tupdateCurrentUser,\r\n\t\t\t\teditableStocks,\r\n\t\t\t\tsetEditableStocks,\r\n\t\t\t\tloading,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</UserContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default UserContextProvider;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tmin-width: 50vw;\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: flex-end;\r\n\r\n\t&:nth-child(2) {\r\n\t\tmargin: 1rem 0;\r\n\t}\r\n\r\n\t@media (max-width: 1024px) {\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\r\n\t\t&:nth-child(2) {\r\n\t\t\tmargin: 0.7rem 0;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const Headline = styled.h2`\r\n\tfont-weight: 400;\r\n\tcolor: #eee;\r\n\tmargin: 0 1rem;\r\n\r\n\t@media (max-width: 1024px) {\r\n\t\tmargin-bottom: 0.1rem;\r\n\t\tfont-size: 1.1rem;\r\n\t}\r\n`;\r\n\r\nexport const WithButton = styled.div`\r\n\tdisplay: flex;\r\n\r\n\t@media (max-width: 1024px) {\r\n\t\twidth: 100%;\r\n\t\tjustify-content: center;\r\n\t}\r\n`;\r\n","import styled, { createGlobalStyle } from 'styled-components';\r\nimport { Input, InputNumber } from 'antd';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { InputNumberProps } from 'antd/lib/input-number';\r\n\r\ninterface CustomInputProps extends InputProps {\r\n\twidth: string | number | undefined;\r\n\tbackgroundcolor: string | undefined;\r\n\tbordercolor?: string | undefined;\r\n}\r\n\r\ninterface CustomInputNumberProps extends InputNumberProps {\r\n\twidth: string | number | undefined;\r\n\tbackgroundcolor: string | undefined;\r\n\tbordercolor?: string | undefined;\r\n}\r\n\r\nexport const GlobalStyled = createGlobalStyle`\r\n  input {\r\n\tbackground: rgba(0, 0, 0, 0) !important;\r\n\tcolor: #eee !important;\r\n  }\r\n  \r\n`;\r\n\r\nexport const StyledInput = styled(Input)<CustomInputProps>`\r\n\twidth: ${({ width }) => width};\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tbackground: ${({ backgroundcolor }) =>\r\n\t\tbackgroundcolor ? backgroundcolor : 'rgba(0, 0, 0, 0)'} !important;\r\n\tcolor: #eee;\r\n\tborder-color: ${({ bordercolor }) =>\r\n\t\tbordercolor ? bordercolor : 'rgba(159, 159, 159, 0.5)'};\r\n\tbox-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),\r\n\t\t0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n\r\n\tsvg {\r\n\t\tcolor: #eee;\r\n\t}\r\n\r\n\t.ant-input-group-addon {\r\n\t\tbackground: ${({ theme }) => theme.primaryBlue};\r\n\t\tborder-color: ${({ theme }) => theme.primaryBlue};\r\n\t}\r\n`;\r\n\r\nexport const StyledInputNumber = styled(InputNumber)<CustomInputNumberProps>`\r\n\tmargin: 0 0.5rem;\r\n\twidth: ${({ width }) => width};\r\n\tbackground: ${({ backgroundcolor }) =>\r\n\t\tbackgroundcolor ? backgroundcolor : 'rgba(0, 0, 0, 0)'};\r\n\tcolor: #eee;\r\n\tborder-color: ${({ bordercolor }) =>\r\n\t\tbordercolor ? bordercolor : 'rgba(159, 159, 159, 0.5)'};\r\n\tbox-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\r\n`;\r\n","import * as React from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\n\r\nimport {\r\n\tStyledInput,\r\n\tStyledInputNumber,\r\n\tGlobalStyled,\r\n} from './custom-input.styles';\r\nimport { InputNumberProps } from 'antd/lib/input-number';\r\n\r\nexport interface CustomInputProps extends InputProps {\r\n\twidth?: string | number | undefined;\r\n\tbackgroundcolor?: string | undefined;\r\n\tbordercolor?: string | undefined;\r\n\tisAvailableBalanceInput?: boolean;\r\n}\r\n\r\nexport const CustomInput: React.FunctionComponent<CustomInputProps> = (\r\n\tprops\r\n) => {\r\n\tconst { width, backgroundcolor } = props;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<GlobalStyled />\r\n\r\n\t\t\t<StyledInput\r\n\t\t\t\twidth={width}\r\n\t\t\t\tbackgroundcolor={backgroundcolor}\r\n\t\t\t\tsize='large'\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport interface CustomNumberInputProps extends InputNumberProps {\r\n\twidth?: string | number | undefined;\r\n\tbackgroundcolor?: string | undefined;\r\n\tbordercolor?: string | undefined;\r\n}\r\n\r\nexport const CustomNumberInput: React.FunctionComponent<CustomNumberInputProps> = (\r\n\tprops\r\n) => {\r\n\tconst { size, placeholder, width, backgroundcolor } = props;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<GlobalStyled />\r\n\t\t\t<StyledInputNumber\r\n\t\t\t\tsize={size}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\twidth={width}\r\n\t\t\t\tbackgroundcolor={backgroundcolor}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n","import * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport { SaveOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nimport {\r\n\tContainer,\r\n\tInputContainer,\r\n\tHeadline,\r\n\tWithButton,\r\n} from './balance-info.styles';\r\n\r\nimport { CustomInput } from '../custom-input/custom-input.component';\r\n\r\nexport interface BalanceInfoProps {\r\n\tavailableBalanceInput: number;\r\n\tsetAvailableBalanceInput: React.Dispatch<React.SetStateAction<number>>;\r\n\tavailableBalance: number;\r\n\tinvestedBalance: number;\r\n\ttotalBalance: number;\r\n\thandleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n\thandleSubmit: (e: any) => void;\r\n}\r\nconst BalanceInfo: React.FunctionComponent<BalanceInfoProps> = ({\r\n\tavailableBalance,\r\n\tinvestedBalance,\r\n\ttotalBalance,\r\n\thandleChange,\r\n\thandleSubmit,\r\n\tavailableBalanceInput,\r\n\tsetAvailableBalanceInput,\r\n}) => {\r\n\tuseEffect(() => {\r\n\t\tsetAvailableBalanceInput(availableBalance);\r\n\t}, [availableBalance, setAvailableBalanceInput]);\r\n\r\n\tconst isMobile = useMediaQuery({\r\n\t\tquery: '(max-device-width: 1024px)',\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<InputContainer>\r\n\t\t\t\t<Headline>Available balance</Headline>\r\n\t\t\t\t<WithButton>\r\n\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\tcustomInput={CustomInput}\r\n\t\t\t\t\t\tthousandSeparator=','\r\n\t\t\t\t\t\tdecimalSeparator='.'\r\n\t\t\t\t\t\tprefix={'R$'}\r\n\t\t\t\t\t\twidth={isMobile ? '100%' : '300px'}\r\n\t\t\t\t\t\tfixedDecimalScale={true}\r\n\t\t\t\t\t\tvalue={availableBalanceInput}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tonPressEnter={handleSubmit}\r\n\t\t\t\t\t\tsize={isMobile ? ('middle' as any) : ('large' as any)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\ticon={<SaveOutlined />}\r\n\t\t\t\t\t\tsize={isMobile ? 'middle' : 'large'}\r\n\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\tavailableBalanceInput !== availableBalance\r\n\t\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t\t: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</WithButton>\r\n\t\t\t</InputContainer>\r\n\r\n\t\t\t<InputContainer>\r\n\t\t\t\t<Headline>Invested balance</Headline>\r\n\t\t\t\t<NumberFormat\r\n\t\t\t\t\tvalue={investedBalance}\r\n\t\t\t\t\tdisplayType={'text'}\r\n\t\t\t\t\tthousandSeparator=','\r\n\t\t\t\t\tdecimalSeparator='.'\r\n\t\t\t\t\tprefix={'R$'}\r\n\t\t\t\t\trenderText={(value) => (\r\n\t\t\t\t\t\t<CustomInput\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\twidth={isMobile ? '100%' : '340px'}\r\n\t\t\t\t\t\t\tsize={isMobile ? 'middle' : 'large'}\r\n\t\t\t\t\t\t\tbackgroundcolor='#1488cc'\r\n\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</InputContainer>\r\n\r\n\t\t\t<InputContainer>\r\n\t\t\t\t<Headline>Total balance</Headline>\r\n\t\t\t\t<NumberFormat\r\n\t\t\t\t\tvalue={totalBalance}\r\n\t\t\t\t\tdisplayType={'text'}\r\n\t\t\t\t\tthousandSeparator=','\r\n\t\t\t\t\tdecimalSeparator='.'\r\n\t\t\t\t\tprefix={'R$'}\r\n\t\t\t\t\trenderText={(value) => (\r\n\t\t\t\t\t\t<CustomInput\r\n\t\t\t\t\t\t\twidth={isMobile ? '100%' : '340px'}\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tsize={isMobile ? 'middle' : 'large'}\r\n\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\tbackgroundcolor='#1488cc'\r\n\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</InputContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default BalanceInfo;\r\n","import * as React from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { useState, useContext } from 'react';\r\n\r\nimport { CHANGE_USER_AVAILABLE_BALANCE } from '../../graphql/mutations/server-mutations';\r\nimport { UserContext } from '../../contexts/user.context';\r\n\r\nimport BalanceInfo from './balance-info.component';\r\nimport { message } from 'antd';\r\n\r\nexport interface BalanceInfoContainerProps {}\r\n\r\nconst BalanceInfoContainer: React.FunctionComponent<BalanceInfoContainerProps> = () => {\r\n\tconst [availableBalanceInput, setAvailableBalanceInput] = useState<number>(\r\n\t\t0\r\n\t);\r\n\tconst { currentUser, updateCurrentUser } = useContext(UserContext);\r\n\tconst [changeUserAvailableBalance] = useMutation(\r\n\t\tCHANGE_USER_AVAILABLE_BALANCE,\r\n\t\t{\r\n\t\t\tonCompleted: ({ changeUserAvailableBalance: user }) => {\r\n\t\t\t\tupdateCurrentUser(user);\r\n\t\t\t\tmessage.success(\r\n\t\t\t\t\t'Your available balance was successfully changed.'\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t}\r\n\t);\r\n\r\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst valueInNumber = Number(\r\n\t\t\tevent.target.value.replace(/[^0-9.]+/g, '')\r\n\t\t);\r\n\t\tsetAvailableBalanceInput(valueInNumber);\r\n\t};\r\n\r\n\tconst handleSubmit = () => {\r\n\t\tchangeUserAvailableBalance({\r\n\t\t\tvariables: {\r\n\t\t\t\tid: currentUser!.id,\r\n\t\t\t\tnewAvailableBalance: availableBalanceInput,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{currentUser ? (\r\n\t\t\t\t<BalanceInfo\r\n\t\t\t\t\tavailableBalanceInput={availableBalanceInput}\r\n\t\t\t\t\tsetAvailableBalanceInput={setAvailableBalanceInput}\r\n\t\t\t\t\tavailableBalance={currentUser.availableBalance}\r\n\t\t\t\t\tinvestedBalance={currentUser.investedBalance}\r\n\t\t\t\t\ttotalBalance={currentUser.totalBalance}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\t/>\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default BalanceInfoContainer;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\twidth: 100%;\r\n\r\n\th2 {\r\n\t\ttext-align: center;\r\n\t\tfont-weight: 400;\r\n\t\tcolor: #eee;\r\n\t\tmargin: 0;\r\n\t\tmargin-bottom: 0.1rem;\r\n\t\tfont-size: 1.1rem;\r\n\t}\r\n`;\r\n\r\nexport const InputsContainer = styled.div`\r\n\tdisplay: flex;\r\n\tmax-width: 50vw;\r\n\r\n\t@media (max-width: 1024px) {\r\n\t\tjustify-content: center;\r\n\t\tmax-width: 100%;\r\n\t\tmargin-bottom: 0.7rem;\r\n\r\n\t\tinput {\r\n\t\t\twidth: 100%;\r\n\t\t}\r\n\t}\r\n`;\r\n","import * as React from 'react';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport { FetchResult } from '@apollo/client';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nimport { Container, InputsContainer } from './stock-purchase.styles';\r\nimport {\r\n\tCustomInput,\r\n\tCustomNumberInput,\r\n} from '../custom-input/custom-input.component';\r\n\r\nexport interface StockPurchaseProps {\r\n\tsymbol: string;\r\n\tquantity: number;\r\n\thandleSymbolChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n\thandleQuantityChange: (value: string | number | undefined) => void;\r\n\thandleSubmit: () =>\r\n\t\t| Promise<FetchResult<any, Record<string, any>, Record<string, any>>>\r\n\t\t| undefined;\r\n}\r\n\r\nconst StockPurchase: React.FunctionComponent<StockPurchaseProps> = ({\r\n\tsymbol,\r\n\tquantity,\r\n\thandleSymbolChange,\r\n\thandleQuantityChange,\r\n\thandleSubmit,\r\n}) => {\r\n\tconst isMobile = useMediaQuery({\r\n\t\tquery: '(max-device-width: 1024px)',\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{isMobile ? <h2>Add the purchase of a stock</h2> : null}\r\n\t\t\t<InputsContainer>\r\n\t\t\t\t<CustomInput\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tsize={isMobile ? 'middle' : 'large'}\r\n\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\tisMobile ? 'Symbol' : 'Add the purchase of a stock'\r\n\t\t\t\t\t}\r\n\t\t\t\t\twidth={isMobile ? 'inherit' : '45%'}\r\n\t\t\t\t\tvalue={symbol}\r\n\t\t\t\t\tonChange={handleSymbolChange}\r\n\t\t\t\t\tonPressEnter={handleSubmit}\r\n\t\t\t\t/>\r\n\t\t\t\t<CustomNumberInput\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\tsize={isMobile ? ('middle' as any) : ('large' as any)}\r\n\t\t\t\t\tmin={1}\r\n\t\t\t\t\tplaceholder='Qnt.'\r\n\t\t\t\t\tvalue={quantity}\r\n\t\t\t\t\tonChange={handleQuantityChange}\r\n\t\t\t\t\tonPressEnter={handleSubmit}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tsize={isMobile ? 'middle' : 'large'}\r\n\t\t\t\t\ttype='primary'\r\n\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t/>\r\n\t\t\t</InputsContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default StockPurchase;\r\n","import * as React from 'react';\r\nimport { useState, useContext } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { message } from 'antd';\r\n\r\nimport { ADD_EXISTING_USER_STOCK } from '../../graphql/mutations/server-mutations';\r\nimport { UserContext } from '../../contexts/user.context';\r\n\r\nimport StockPurchase from './stock-purchase.component';\r\n\r\nexport interface StockPurchaseContainerProps {}\r\n\r\nconst StockPurchaseContainer: React.FunctionComponent<StockPurchaseContainerProps> = () => {\r\n\tconst [symbol, setSymbol] = useState('');\r\n\tconst [quantity, setQuantity] = useState(1);\r\n\r\n\tconst { currentUser, updateCurrentUser } = useContext(UserContext);\r\n\tconst [addExistingUserStock] = useMutation(ADD_EXISTING_USER_STOCK, {\r\n\t\tonCompleted: ({ addExistingUserStock: user }) => {\r\n\t\t\tupdateCurrentUser(user);\r\n\t\t\tsetSymbol('');\r\n\t\t\tsetQuantity(1);\r\n\t\t},\r\n\t\tonError: (error) => message.error(error.message, 2.5),\r\n\t});\r\n\r\n\tconst handleSymbolChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetSymbol(e.target.value.trim());\r\n\t};\r\n\r\n\tconst handleQuantityChange = (value: string | number | undefined) => {\r\n\t\tsetQuantity(value as number);\r\n\t};\r\n\r\n\tconst handleSubmit = () => {\r\n\t\tif (symbol)\r\n\t\t\treturn addExistingUserStock({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tuserId: currentUser?.id,\r\n\t\t\t\t\tsymbol,\r\n\t\t\t\t\tquantity,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StockPurchase\r\n\t\t\tsymbol={symbol}\r\n\t\t\tquantity={quantity}\r\n\t\t\thandleSymbolChange={handleSymbolChange}\r\n\t\t\thandleQuantityChange={handleQuantityChange}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default StockPurchaseContainer;\r\n","import * as React from 'react';\r\n\r\nimport { Container } from './wallet-header.styles';\r\n\r\nimport { default as BalanceInfo } from '../balance-info/balance-info.container';\r\nimport { default as StockPurchase } from '../stock-purchase/stock-purchase.container';\r\n\r\nexport interface HeaderProps {}\r\n\r\nconst Header: React.FunctionComponent<HeaderProps> = () => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<StockPurchase />\r\n\t\t\t<BalanceInfo />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport { Button } from 'antd';\r\n\r\nimport {\r\n\tButtons,\r\n\tContainer,\r\n\tContent,\r\n\tHeadline,\r\n\tButtonsContent,\r\n} from './wallet.styles';\r\n\r\nimport Header from '../wallet-header/wallet-header.component';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../../contexts/user.context';\r\n\r\nexport interface WalletProps {}\r\n\r\nconst Wallet: React.FunctionComponent<WalletProps> = () => {\r\n\tconst { currentUser, logout } = useContext(UserContext);\r\n\tconst history = useHistory();\r\n\r\n\tconst handleLoginClick = () => {\r\n\t\thistory.push('/login');\r\n\t};\r\n\r\n\tconst handleRegisterClick = () => {\r\n\t\thistory.push('/register');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Content>\r\n\t\t\t\t<Headline>My Wallet</Headline>\r\n\t\t\t\t<Buttons>\r\n\t\t\t\t\t{currentUser ? (\r\n\t\t\t\t\t\t<ButtonsContent>\r\n\t\t\t\t\t\t\t<p>{currentUser.name}</p>\r\n\t\t\t\t\t\t\t<Button type='primary' onClick={logout}>\r\n\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</ButtonsContent>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<ButtonsContent>\r\n\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t<Button type='primary' onClick={handleLoginClick}>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button type='link' onClick={handleRegisterClick}>\r\n\t\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</ButtonsContent>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Buttons>\r\n\t\t\t</Content>\r\n\t\t\t<Header />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Wallet;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\twidth: 100%;\r\n`;\r\n\r\nexport const Headline = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\r\n\tp {\r\n\t\tcolor: #eee;\r\n\t\tfont-weight: 400;\r\n\t\tfont-size: 2rem;\r\n\t\tmargin: 1rem 0;\r\n\t\tmargin-right: 1rem;\r\n\t}\r\n\r\n\tbutton:nth-child(2) {\r\n\t\tmargin-right: 1rem;\r\n\t}\r\n\r\n\t@media (min-width: 321px) and (max-width: 767px) {\r\n\t\tjustify-content: space-between;\r\n\t}\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\twidth: 100%;\r\n\theight: 413px;\r\n\tdisplay: flex;\r\n\tflex-flow: wrap;\r\n\tjustify-content: space-between;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\ntype ContainerProps = {\r\n\teditableStocks: boolean;\r\n};\r\n\r\nexport const Container = styled.div<ContainerProps>`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\theight: 350px;\r\n\twidth: 820px;\r\n\tborder-radius: 5px;\r\n\tbackground: ${({ editableStocks }) =>\r\n\t\teditableStocks ? '#2a2a2a' : '#515151'};\r\n\tpadding: 1.2rem 2rem;\r\n\tbox-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1),\r\n\t\t0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\n\tmargin-bottom: 4rem;\r\n\r\n\t@media (max-width: 767px) {\r\n\t\twidth: 100%;\r\n\t\theight: auto;\r\n\t\tmargin-bottom: 1.5rem;\r\n\t\tpadding: 1rem 1.3rem;\r\n\t}\r\n\r\n\t@media (min-width: 769px) and (max-width: 1024px) {\r\n\t\twidth: 100%;\r\n\t}\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tflex: auto;\r\n\tdisplay: flex;\r\n\talign-items: flex-start;\r\n\tpadding: 1.2rem 0;\r\n\r\n\t@media (max-width: 767px) {\r\n\t\tflex-direction: column;\r\n\t\tpadding: 0.35rem 0;\r\n\t}\r\n`;\r\n\r\nexport const ColumnsInfo = styled.div`\r\n\theight: 100%;\r\n\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: flex-start;\r\n\r\n\tmargin-right: 1rem;\r\n\r\n\tp {\r\n\t\tfont-size: 1.2rem;\r\n\t\tmargin: 0.6rem 0;\r\n\t\tfont-weight: 600;\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t@media (max-width: 767px) {\r\n\t\tdisplay: none;\r\n\t}\r\n\r\n\t@media (min-width: 769px) and (max-width: 1024px) {\r\n\t\tmargin-right: 1.5rem;\r\n\t}\r\n`;\r\n\r\nexport const Score = styled.div`\r\n\tbackground: #2a2a2a;\r\n\tborder-radius: 5px;\r\n\tposition: relative;\r\n\tmin-height: 50px;\r\n\tmax-height: 50px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\r\n\tp:nth-child(1) {\r\n\t\tmargin: 0;\r\n\t\tmargin-bottom: -0.3rem;\r\n\t\tfont-size: 0.75rem;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\tp:nth-child(2) {\r\n\t\ttext-align: center;\r\n\t\tmargin: 0;\r\n\t}\r\n`;\r\n\r\nexport const Columns = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tflex: auto;\r\n\r\n\t@media (max-width: 767px) {\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t}\r\n`;\r\n","import styled from 'styled-components';\r\n\r\ntype ItemProps = {\r\n\theadline?: boolean;\r\n\tadjustment?: boolean;\r\n};\r\n\r\nexport const Container = styled.div`\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: flex-end;\r\n\twidth: 200px;\r\n\r\n\t@media (max-width: 768px) {\r\n\t\twidth: 100%;\r\n\t}\r\n`;\r\n\r\nexport const Item = styled.div<ItemProps>`\r\n\tmargin: 0.6rem 0;\r\n\tbackground-color: ${({ headline, theme }) =>\r\n\t\theadline ? theme.primaryBlue : '#2a2a2a'};\r\n\tfont-weight: ${({ headline, adjustment }) =>\r\n\t\theadline || adjustment ? '600' : 'initial'};\r\n\tfont-size: 1.2rem;\r\n\twidth: 200px;\r\n\theight: 30px;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tborder-radius: 3px;\r\n\r\n\tcolor: ${({ adjustment, theme }) =>\r\n\t\tadjustment ? theme.primaryBlue : 'inherit'};\r\n\r\n\t@media (max-width: 767px) {\r\n\t\twidth: 100%;\r\n\t\tfont-size: 1rem;\r\n\t\tmargin: 0.4rem 0;\r\n\t}\r\n\r\n\t@media (width: 768px) {\r\n\t\tfont-size: 1rem;\r\n\t\twidth: 190px;\r\n\t}\r\n`;\r\n","import * as React from 'react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport { Stock } from '../../helpers/types/stock.types';\r\nimport { Container, Item } from './stock-item-content-column.styles';\r\n\r\nexport interface StockItemColumnProps {\r\n\theadlineText: string;\r\n\tcontentType: 'current' | 'ideal' | 'adjustment';\r\n\tstock: Stock;\r\n}\r\n\r\nconst StockItemColumn: React.FunctionComponent<StockItemColumnProps> = ({\r\n\theadlineText,\r\n\tcontentType,\r\n\tstock,\r\n}) => {\r\n\tconst {\r\n\t\tquantity,\r\n\t\ttotalInvested,\r\n\t\tpercentageOfThePortfolio,\r\n\t\tidealQuantity,\r\n\t\tidealTotalInvested,\r\n\t\tidealPercentageOfThePortfolio,\r\n\t\tquantityAdjustment,\r\n\t\ttotalInvestedAdjustment,\r\n\t} = stock;\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Item headline={true}>{headlineText}</Item>\r\n\t\t\t{contentType === 'current' ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Item>{quantity}</Item>\r\n\t\t\t\t\t<Item>\r\n\t\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\t\tvalue={totalInvested}\r\n\t\t\t\t\t\t\tdisplayType={'text'}\r\n\t\t\t\t\t\t\tthousandSeparator=','\r\n\t\t\t\t\t\t\tdecimalSeparator='.'\r\n\t\t\t\t\t\t\tprefix={'R$'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Item>\r\n\t\t\t\t\t<Item>{percentageOfThePortfolio}%</Item>\r\n\t\t\t\t</>\r\n\t\t\t) : contentType === 'ideal' ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Item>{idealQuantity}</Item>\r\n\t\t\t\t\t<Item>\r\n\t\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\t\tvalue={idealTotalInvested}\r\n\t\t\t\t\t\t\tdisplayType={'text'}\r\n\t\t\t\t\t\t\tthousandSeparator=','\r\n\t\t\t\t\t\t\tdecimalSeparator='.'\r\n\t\t\t\t\t\t\tprefix={'R$'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Item>\r\n\r\n\t\t\t\t\t<Item>{idealPercentageOfThePortfolio}%</Item>\r\n\t\t\t\t</>\r\n\t\t\t) : contentType === 'adjustment' ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Item adjustment={true}>{quantityAdjustment}</Item>\r\n\t\t\t\t\t<Item adjustment={true}>\r\n\t\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\t\tvalue={totalInvestedAdjustment}\r\n\t\t\t\t\t\t\tdisplayType={'text'}\r\n\t\t\t\t\t\t\tthousandSeparator=','\r\n\t\t\t\t\t\t\tdecimalSeparator='.'\r\n\t\t\t\t\t\t\tprefix={'R$'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Item>\r\n\t\t\t\t</>\r\n\t\t\t) : null}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default StockItemColumn;\r\n","import * as React from 'react';\r\n\r\nimport {\r\n\tColumns,\r\n\tColumnsInfo,\r\n\tContainer,\r\n\tScore,\r\n} from './stock-item-content.styles';\r\nimport { Stock } from '../../helpers/types/stock.types';\r\n\r\nimport StockItemColumn from '../stock-item-content-column/stock-item-content-column.component';\r\n\r\nexport interface StockItemContentProps {\r\n\tstock: Stock;\r\n}\r\n\r\nconst StockItemContent: React.FunctionComponent<StockItemContentProps> = ({\r\n\tstock,\r\n}) => {\r\n\tconst { score } = stock;\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ColumnsInfo>\r\n\t\t\t\t<Score>\r\n\t\t\t\t\t<p>Score</p>\r\n\t\t\t\t\t<p>{score}</p>\r\n\t\t\t\t</Score>\r\n\t\t\t\t<p>Qnt.</p>\r\n\t\t\t\t<p>Pos.</p>\r\n\t\t\t\t<p>%</p>\r\n\t\t\t</ColumnsInfo>\r\n\t\t\t<Columns>\r\n\t\t\t\t<StockItemColumn\r\n\t\t\t\t\theadlineText='Current'\r\n\t\t\t\t\tcontentType='current'\r\n\t\t\t\t\tstock={stock}\r\n\t\t\t\t/>\r\n\t\t\t\t<StockItemColumn\r\n\t\t\t\t\theadlineText='Ideal'\r\n\t\t\t\t\tcontentType='ideal'\r\n\t\t\t\t\tstock={stock}\r\n\t\t\t\t/>\r\n\t\t\t\t<StockItemColumn\r\n\t\t\t\t\theadlineText='Adjustment'\r\n\t\t\t\t\tcontentType='adjustment'\r\n\t\t\t\t\tstock={stock}\r\n\t\t\t\t/>\r\n\t\t\t</Columns>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default StockItemContent;\r\n","import styled from 'styled-components';\r\n\r\ntype StatusProps = {\r\n\tstatus: 'Wait' | 'Buy';\r\n};\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tflex: 1;\r\n\r\n\tp {\r\n\t\tfont-size: 1.4rem;\r\n\t\tmargin: 0;\r\n\t\tfont-weight: 600;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\tflex: initial;\r\n\t\tpadding-bottom: 0.7rem;\r\n\r\n\t\tp {\r\n\t\t\tfont-size: 1rem;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const Status = styled.div<StatusProps>`\r\n\tbackground-color: ${({ status }) =>\r\n\t\tstatus === 'Wait' ? '#e6494c' : '#4bc05e'};\r\n\tpadding: 0.2rem 0;\r\n\twidth: 90px;\r\n\ttext-align: center;\r\n\tborder-radius: 5px;\r\n\tmargin-top: 0.1rem;\r\n\tfont-size: 1.3rem;\r\n\tfont-weight: 500;\r\n\r\n\t@media (max-width: 767px) {\r\n\t\tmargin-top: 0;\r\n\t\twidth: 70px;\r\n\t\tfont-size: 1rem;\r\n\t}\r\n\r\n\t@media (width: 768px) {\r\n\t\twidth: 70px;\r\n\t\tfont-size: 1.1rem;\r\n\t}\r\n`;\r\n","import * as React from 'react';\r\n\r\nimport { Stock } from '../../helpers/types/stock.types';\r\nimport { Container, Status } from './stock-status.styles';\r\n\r\nexport interface StockStatusProps {\r\n\tstock: Stock;\r\n}\r\n\r\nconst StockStatus: React.FunctionComponent<StockStatusProps> = ({ stock }) => {\r\n\tconst { status } = stock;\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<p>Status</p>\r\n\t\t\t<Status status={status}>{status}</Status>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default StockStatus;\r\n","import styled from 'styled-components';\r\n\r\ntype ChangePercentProps = {\r\n\tisPositive: boolean;\r\n};\r\n\r\nexport const Container = styled.div`\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tcolor: #eee;\r\n\tborder-bottom: 3px solid #5d5c5c;\r\n\r\n\t@media (max-width: 767px) {\r\n\t\tflex-wrap: wrap;\r\n\t\tflex-direction: row-reverse;\r\n\t\talign-items: center;\r\n\t}\r\n`;\r\n\r\nexport const Info = styled.div`\r\n\tflex: 2;\r\n\r\n\t@media (max-width: 767px) {\r\n\t\tflex-basis: 100%;\r\n\t}\r\n`;\r\n\r\nexport const Symbol = styled.p`\r\n\tfont-size: 1.7rem;\r\n\tfont-weight: 600;\r\n\tmargin: 0;\r\n\r\n\t@media (max-width: 767px) {\r\n\t\tfont-size: 2rem;\r\n\t}\r\n`;\r\n\r\nexport const Name = styled.p`\r\n\tfont-size: 1.3rem;\r\n\tmargin-top: -0.3rem;\r\n\r\n\t@media (max-width: 767px) {\r\n\t\tmargin: 0;\r\n\t\tfont-size: 1rem;\r\n\t\tmargin-top: -0.45rem;\r\n\t}\r\n`;\r\n\r\nexport const Value = styled.div`\r\n\ttext-align: right;\r\n\tflex: 1;\r\n\r\n\t@media (max-width: 767px) {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\ttext-align: left;\r\n\t}\r\n`;\r\n\r\nexport const Price = styled.p`\r\n\tfont-size: 1.7rem;\r\n\tfont-weight: 600;\r\n\tmargin: 0;\r\n\r\n\t@media (max-width: 767px) {\r\n\t\tfont-size: 1rem;\r\n\t}\r\n`;\r\n\r\nexport const ChangePercent = styled.p<ChangePercentProps>`\r\n\tfont-size: 1.3rem;\r\n\tmargin-top: -0.3rem;\r\n\ttext-align: right;\r\n\r\n\tcolor: ${({ isPositive, theme }) =>\r\n\t\tisPositive ? theme.primaryBlue : 'red'};\r\n\r\n\t@media (max-width: 767px) {\r\n\t\ttext-align: left;\r\n\t\tmargin-bottom: 0;\r\n\t\tfont-size: 1rem;\r\n\t}\r\n`;\r\n","import * as React from 'react';\r\nimport StockStatus from '../stock-status/stock-status.component';\r\nimport {\r\n\tContainer,\r\n\tInfo,\r\n\tValue,\r\n\tSymbol,\r\n\tName,\r\n\tPrice,\r\n\tChangePercent,\r\n} from './stock-item-header.styles';\r\nimport { Stock } from '../../helpers/types/stock.types';\r\n\r\nexport interface StockItemHeaderProps {\r\n\tstock: Stock;\r\n}\r\n\r\nconst StockItemHeader: React.FunctionComponent<StockItemHeaderProps> = ({\r\n\tstock,\r\n}) => {\r\n\tconst { symbol, name, price, changePercent } = stock;\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Info>\r\n\t\t\t\t<Symbol>{symbol}</Symbol>\r\n\t\t\t\t<Name>{name}</Name>\r\n\t\t\t</Info>\r\n\t\t\t<StockStatus stock={stock} />\r\n\t\t\t<Value>\r\n\t\t\t\t<Price>R${price}</Price>\r\n\t\t\t\t<ChangePercent isPositive={changePercent >= 0}>\r\n\t\t\t\t\t{changePercent >= 0 ? `+${changePercent}` : changePercent}%\r\n\t\t\t\t</ChangePercent>\r\n\t\t\t</Value>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default StockItemHeader;\r\n","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\n\t.ant-popover-content {\r\n\t\t\r\n\t\t.ant-popover-inner  {\r\n\t\t\tbackground: #515151;\r\n\t\t\tbox-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1),\r\n\t\t\t0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\n\r\n\t\t\t.ant-popover-message {\r\n\t\t\t\tcolor: #eee;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.ant-popover-arrow {\r\n\t\t\tborder-right-color: #515151 !important;\r\n\t\t\tborder-bottom-color: #515151 !important;\r\n\t\t}\r\n\r\n\t\t@media(max-width: 767px) {\r\n\t\t\twidth: 90%;\r\n\t\t\tmargin: 0 auto;\r\n\t\t}\r\n\t} \r\n`;\r\n\r\nexport const Container = styled.div`\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const Fields = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tborder-bottom: 2px solid #5d5c5c;\r\n\tpadding-bottom: 1.5rem;\r\n\tmargin-bottom: 1.5rem;\r\n`;\r\n\r\nexport const Field = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\twidth: 32%;\r\n\r\n\tinput {\r\n\t\ttext-align: center;\r\n\t}\r\n`;\r\n\r\nexport const Title = styled.p`\r\n\ttext-align: center;\r\n\tcolor: ${(props) => props.theme.primaryBlue};\r\n\tmargin: 0.7rem 0;\r\n\tfont-size: 1.3rem;\r\n\tfont-weight: 600;\r\n\r\n\t@media (max-width: 767px) {\r\n\t\tfont-size: 1rem;\r\n\t\tmargin: 0.4rem 0;\r\n\t}\r\n`;\r\n\r\nexport const Buttons = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tflex-flow: wrap;\r\n\r\n\t.ant-btn {\r\n\t\twidth: 40%;\r\n\r\n\t\t&:nth-child(1) {\r\n\t\t\twidth: 40%;\r\n\t\t}\r\n\r\n\t\t&:nth-child(2) {\r\n\t\t\twidth: 40%;\r\n\t\t\tmargin-left: 1rem;\r\n\t\t\tbackground: rgba(0, 0, 0, 0);\r\n\t\t\tcolor: ${({ theme }) => theme.primaryBlue};\r\n\t\t\tborder-color: ${({ theme }) => theme.primaryBlue};\r\n\r\n\t\t\t&:hover {\r\n\t\t\t\tbackground: ${({ theme }) => theme.primaryBlue};\r\n\t\t\t\tcolor: #eee;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t&:nth-child(3) {\r\n\t\t\tmargin-top: 1rem;\r\n\t\t\tbackground: #ff3232;\r\n\t\t\tcolor: #eee;\r\n\t\t\tborder-color: #ff3232;\r\n\r\n\t\t\t&:hover {\r\n\t\t\t\tbackground: rgba(0, 0, 0, 0);\r\n\t\t\t\tcolor: #ff3232;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t@media (max-width: 767px) {\r\n\t\tflex-direction: column;\r\n\r\n\t\t.ant-btn {\r\n\t\t\t&:nth-child(1) {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\t&:nth-child(2) {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tmargin: 0.7rem 0;\r\n\t\t\t}\r\n\r\n\t\t\t&:nth-child(3) {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tmargin-top: 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n","import * as React from 'react';\r\nimport { Button } from 'antd';\r\nimport { CloseOutlined, DeleteOutlined, SaveOutlined } from '@ant-design/icons';\r\nimport { Popconfirm } from 'antd';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nimport {\r\n\tButtons,\r\n\tContainer,\r\n\tField,\r\n\tFields,\r\n\tTitle,\r\n\tGlobalStyle,\r\n} from './stock-edit.styles';\r\n\r\nimport {\r\n\tCustomInput,\r\n\tCustomNumberInput,\r\n} from '../custom-input/custom-input.component';\r\n\r\nexport interface StockEditProps {\r\n\tsymbol: string;\r\n\tquantity: number;\r\n\tscore: number;\r\n\thandleQuantityChange: (value: string | number | undefined) => void;\r\n\thandleScoreChange: (value: string | number | undefined) => void;\r\n\tresetInputs: () => void;\r\n\thandleConfirmDelete: () => void;\r\n\thandleSaveChanges: () => void;\r\n}\r\n\r\nconst StockEdit: React.FunctionComponent<StockEditProps> = ({\r\n\tsymbol,\r\n\tquantity,\r\n\tscore,\r\n\thandleQuantityChange,\r\n\thandleScoreChange,\r\n\thandleConfirmDelete,\r\n\thandleSaveChanges,\r\n\tresetInputs,\r\n}) => {\r\n\tconst isMobile = useMediaQuery({\r\n\t\tquery: '(max-device-width: 1024px)',\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<GlobalStyle />\r\n\t\t\t<Fields>\r\n\t\t\t\t<Field>\r\n\t\t\t\t\t<Title>Symbol</Title>\r\n\t\t\t\t\t<CustomInput\r\n\t\t\t\t\t\tsize={isMobile ? 'middle' : 'large'}\r\n\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\tvalue={symbol}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Field>\r\n\t\t\t\t<Field>\r\n\t\t\t\t\t<Title>Quantity</Title>\r\n\t\t\t\t\t<CustomNumberInput\r\n\t\t\t\t\t\tsize={isMobile ? 'middle' : 'large'}\r\n\t\t\t\t\t\twidth='100%'\r\n\t\t\t\t\t\tvalue={quantity}\r\n\t\t\t\t\t\tonChange={handleQuantityChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Field>\r\n\t\t\t\t<Field>\r\n\t\t\t\t\t<Title>Score</Title>\r\n\t\t\t\t\t<CustomNumberInput\r\n\t\t\t\t\t\tsize={isMobile ? 'middle' : 'large'}\r\n\t\t\t\t\t\twidth='100%'\r\n\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\tmax={10}\r\n\t\t\t\t\t\tvalue={score}\r\n\t\t\t\t\t\tonChange={handleScoreChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Field>\r\n\t\t\t</Fields>\r\n\t\t\t<Buttons>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype='primary'\r\n\t\t\t\t\tsize={isMobile ? 'middle' : 'large'}\r\n\t\t\t\t\ticon={<SaveOutlined />}\r\n\t\t\t\t\tonClick={handleSaveChanges}\r\n\t\t\t\t>\r\n\t\t\t\t\tSave changes\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype='default'\r\n\t\t\t\t\tsize={isMobile ? 'middle' : 'large'}\r\n\t\t\t\t\ticon={<CloseOutlined />}\r\n\t\t\t\t\tonClick={resetInputs}\r\n\t\t\t\t>\r\n\t\t\t\t\tDiscard changes\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<Popconfirm\r\n\t\t\t\t\tplacement={isMobile ? 'top' : 'topRight'}\r\n\t\t\t\t\ttitle='Are you sure you want to delete this stock from your portfolio?'\r\n\t\t\t\t\tokText='Yes'\r\n\t\t\t\t\tcancelText='No'\r\n\t\t\t\t\tclassName='popconfirm'\r\n\t\t\t\t\tonConfirm={handleConfirmDelete}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype='default'\r\n\t\t\t\t\t\tsize={isMobile ? 'middle' : 'large'}\r\n\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Popconfirm>\r\n\t\t\t</Buttons>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default StockEdit;\r\n","import * as React from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { message } from 'antd';\r\n\r\nimport { UserContext } from '../../contexts/user.context';\r\nimport {\r\n\tEDIT_USER_STOCK,\r\n\tDELETE_USER_STOCK,\r\n} from '../../graphql/mutations/server-mutations';\r\nimport { Stock } from '../../helpers/types/stock.types';\r\n\r\nimport StockEdit from './stock-edit.component';\r\n\r\nexport interface StockEditContainerProps {\r\n\tstock: Stock;\r\n}\r\n\r\nconst StockEditContainer: React.FunctionComponent<StockEditContainerProps> = ({\r\n\tstock,\r\n}) => {\r\n\tconst [symbol] = React.useState<string>(stock.symbol);\r\n\tconst [quantity, setQuantity] = React.useState<number>(stock.quantity);\r\n\tconst [score, setScore] = React.useState<number>(stock.score);\r\n\r\n\tconst { currentUser, updateCurrentUser } = React.useContext(UserContext);\r\n\tconst [editUserStock] = useMutation(EDIT_USER_STOCK, {\r\n\t\tvariables: {\r\n\t\t\tuserId: currentUser?.id,\r\n\t\t\tstockId: stock.id,\r\n\t\t\tscore,\r\n\t\t\tquantity,\r\n\t\t},\r\n\t\tonCompleted: ({ editUserStock: user }) => {\r\n\t\t\tupdateCurrentUser(user);\r\n\t\t\tmessage.success('The changes were successfully saved.');\r\n\t\t},\r\n\t});\r\n\tconst [deleteUserStock] = useMutation(DELETE_USER_STOCK, {\r\n\t\tvariables: { userId: currentUser?.id, stockId: stock.id },\r\n\t\tonCompleted: ({ deleteUserStock: user }) => updateCurrentUser(user),\r\n\t});\r\n\r\n\tconst handleQuantityChange = (value: string | number | undefined) => {\r\n\t\tsetQuantity(value as any);\r\n\t};\r\n\r\n\tconst handleScoreChange = (value: string | number | undefined) => {\r\n\t\tsetScore(value as any);\r\n\t};\r\n\r\n\tconst resetInputs = () => {\r\n\t\tconst { quantity, score } = stock;\r\n\t\tsetQuantity(quantity);\r\n\t\tsetScore(score);\r\n\t};\r\n\r\n\tconst handleConfirmDelete = () => {\r\n\t\tdeleteUserStock();\r\n\t\tmessage.success('The stock was successfully deleted.');\r\n\t};\r\n\r\n\tconst handleSaveChanges = () => {\r\n\t\teditUserStock();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StockEdit\r\n\t\t\tsymbol={symbol}\r\n\t\t\tquantity={quantity}\r\n\t\t\tscore={score}\r\n\t\t\thandleQuantityChange={handleQuantityChange}\r\n\t\t\thandleScoreChange={handleScoreChange}\r\n\t\t\thandleConfirmDelete={handleConfirmDelete}\r\n\t\t\thandleSaveChanges={handleSaveChanges}\r\n\t\t\tresetInputs={resetInputs}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default StockEditContainer;\r\n","import * as React from 'react';\r\n\r\nimport { Container } from './stock-item.styles';\r\nimport { Stock } from '../../helpers/types/stock.types';\r\n\r\nimport StockItemContent from '../stock-item-content/stock-item-content.component';\r\nimport StockItemHeader from '../stock-item-header/stock-item-header.component';\r\nimport { default as StockEdit } from '../stock-edit/stock-edit.container';\r\n\r\nexport interface StockItemProps {\r\n\tstock: Stock;\r\n\teditableStocks: boolean;\r\n}\r\n\r\nconst StockItem: React.FunctionComponent<StockItemProps> = ({\r\n\tstock,\r\n\teditableStocks,\r\n}) => {\r\n\treturn (\r\n\t\t<Container editableStocks={editableStocks}>\r\n\t\t\t{editableStocks ? (\r\n\t\t\t\t<StockEdit stock={stock} />\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<StockItemHeader stock={stock} />\r\n\t\t\t\t\t<StockItemContent stock={stock} />{' '}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default StockItem;\r\n","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\t.modal {\r\n\t\tcolor: #eee;\r\n\r\n\t\t.ant-modal-body {\r\n\t\t\tpadding: 0 3rem;\r\n\r\n\t\t\t@media (max-width: 767px) {\r\n\t\t\t\tpadding: 0 1rem;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.ant-modal-content {\r\n\t\t\tbackground: #2a2a2a;\r\n\t\t}\r\n\r\n\t\t.ant-modal-header {\r\n\t\t\tborder-color: #2a2a2a;\r\n\t\t\tbackground: #2a2a2a;\r\n\r\n\t\t\t.ant-modal-title {\r\n\t\t\t\tcolor: #1488cc;\r\n\t\t\t\tfont-weight: 600;\r\n\t\t\t\tfont-size: 1.2rem;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.ant-modal-footer {\r\n\t\t\tborder-color: #2a2a2a;\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t\tpadding: 1.5rem 0;\r\n\r\n\t\t\tbutton {\r\n\t\t\t\twidth: 32%;\r\n\t\t\t}\r\n\r\n\t\t\tbutton:nth-child(1) {\r\n\t\t\t\tbackground: rgba(0, 0, 0, 0);\r\n\t\t\t\tcolor: #1488cc;\r\n\t\t\t\tborder-color: #1488cc;\r\n\r\n\t\t\t\t&:hover {\r\n\t\t\t\t\tbackground: #1488cc;\r\n\t\t\t\t\tcolor: #eee;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\t.ant-modal-root .ant-modal-wrap .ant-modal .ant-modal-content {\r\n\t\tbackground: #2a2a2a !important;\r\n\t}\r\n`;\r\n\r\nexport const Fields = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tborder-bottom: 2px solid #5d5c5c;\r\n\tpadding-bottom: 1.5rem;\r\n\r\n\t@media (max-width: 767px) {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n`;\r\n\r\nexport const Field = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\twidth: 32%;\r\n\r\n\tinput {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t@media (max-width: 767px) {\r\n\t\twidth: 100%;\r\n\t}\r\n`;\r\n\r\nexport const Title = styled.p`\r\n\ttext-align: center;\r\n\tcolor: ${(props) => props.theme.primaryBlue};\r\n\tmargin: 0.7rem 0;\r\n\tfont-size: 1.3rem;\r\n\tfont-weight: 600;\r\n`;\r\n","import * as React from 'react';\r\nimport { Button } from 'antd';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport { CheckOutlined, CloseOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nimport {\r\n\tCustomInput,\r\n\tCustomNumberInput,\r\n} from '../custom-input/custom-input.component';\r\n\r\nimport {\r\n\tContainer,\r\n\tField,\r\n\tFields,\r\n\tGlobalStyle,\r\n\tTitle,\r\n} from './add-stock.styles';\r\n\r\nexport interface AddStockProps {\r\n\tsymbol: string;\r\n\tquantity: number;\r\n\tscore: number;\r\n\tvisible: boolean;\r\n\thandleSymbolChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n\thandleQuantityChange: (value: string | number | undefined) => void;\r\n\thandleScoreChange: (value: string | number | undefined) => void;\r\n\thandleEnterPress: () => void;\r\n\thandleOpenModal: () => void;\r\n\thandleCancel: () => void;\r\n}\r\n\r\nconst AddStock: React.FunctionComponent<AddStockProps> = ({\r\n\tsymbol,\r\n\tquantity,\r\n\tscore,\r\n\tvisible,\r\n\thandleSymbolChange,\r\n\thandleQuantityChange,\r\n\thandleScoreChange,\r\n\thandleEnterPress,\r\n\thandleOpenModal,\r\n\thandleCancel,\r\n}) => {\r\n\tconst isMobile = useMediaQuery({\r\n\t\tquery: '(max-device-width: 768px)',\r\n\t});\r\n\r\n\tconst isIphone5s = useMediaQuery({\r\n\t\tquery: '(max-device-width: 320px)',\r\n\t});\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<GlobalStyle />\r\n\t\t\t<Button\r\n\t\t\t\ttype='primary'\r\n\t\t\t\tsize={isMobile ? 'middle' : 'large'}\r\n\t\t\t\tonClick={handleOpenModal}\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\t{isIphone5s ? null : 'New'}\r\n\t\t\t</Button>\r\n\t\t\t<Container>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\ttitle='Add a new stock with no cost (will not affect your available balance)'\r\n\t\t\t\t\tcentered\r\n\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\tonOk={handleEnterPress}\r\n\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\tclassName='modal'\r\n\t\t\t\t\tclosable={false}\r\n\t\t\t\t\twidth='820px'\r\n\t\t\t\t\tokButtonProps={{ icon: <CheckOutlined />, size: 'large' }}\r\n\t\t\t\t\tcancelButtonProps={{\r\n\t\t\t\t\t\ticon: <CloseOutlined />,\r\n\t\t\t\t\t\tsize: 'large',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Fields>\r\n\t\t\t\t\t\t<Field>\r\n\t\t\t\t\t\t\t<Title>Symbol</Title>\r\n\t\t\t\t\t\t\t<CustomInput\r\n\t\t\t\t\t\t\t\tvalue={symbol}\r\n\t\t\t\t\t\t\t\tonChange={handleSymbolChange}\r\n\t\t\t\t\t\t\t\tplaceholder='ABCD4'\r\n\t\t\t\t\t\t\t\tonPressEnter={handleEnterPress}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t<Field>\r\n\t\t\t\t\t\t\t<Title>Quantity</Title>\r\n\t\t\t\t\t\t\t<CustomNumberInput\r\n\t\t\t\t\t\t\t\tsize='large'\r\n\t\t\t\t\t\t\t\twidth='100%'\r\n\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\tvalue={quantity}\r\n\t\t\t\t\t\t\t\tonChange={handleQuantityChange}\r\n\t\t\t\t\t\t\t\tonPressEnter={handleEnterPress}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t<Field>\r\n\t\t\t\t\t\t\t<Title>Score</Title>\r\n\t\t\t\t\t\t\t<CustomNumberInput\r\n\t\t\t\t\t\t\t\tsize='large'\r\n\t\t\t\t\t\t\t\twidth='100%'\r\n\t\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\t\tmax={10}\r\n\t\t\t\t\t\t\t\tvalue={score}\r\n\t\t\t\t\t\t\t\tonChange={handleScoreChange}\r\n\t\t\t\t\t\t\t\tonPressEnter={handleEnterPress}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t</Fields>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AddStock;\r\n","import { useMutation } from '@apollo/client';\r\nimport { message } from 'antd';\r\nimport * as React from 'react';\r\nimport { useState, useContext } from 'react';\r\nimport { UserContext } from '../../contexts/user.context';\r\nimport { ADD_NEW_USER_STOCK } from '../../graphql/mutations/server-mutations';\r\nimport AddStock from './add-stock.component';\r\n\r\nexport interface AddStockContainerProps {}\r\n\r\nconst AddStockContainer: React.FunctionComponent<AddStockContainerProps> = () => {\r\n\tconst [symbol, setSymbol] = useState<string>('');\r\n\tconst [quantity, setQuantity] = useState<number>(1);\r\n\tconst [score, setScore] = useState<number>(1);\r\n\tconst [visible, setVisible] = useState(false);\r\n\r\n\tconst { currentUser, updateCurrentUser } = useContext(UserContext);\r\n\tconst [addNewUserStock] = useMutation(ADD_NEW_USER_STOCK, {\r\n\t\tvariables: {\r\n\t\t\tuserId: currentUser?.id,\r\n\t\t\tsymbol,\r\n\t\t\tquantity,\r\n\t\t\tscore,\r\n\t\t},\r\n\t\tonCompleted: ({ addNewUserStock: user }) => {\r\n\t\t\tupdateCurrentUser(user);\r\n\t\t\tsetSymbol('');\r\n\t\t\tsetQuantity(1);\r\n\t\t\tsetScore(1);\r\n\t\t\tsetVisible(false);\r\n\t\t\tmessage.success('The stock was successfully added.');\r\n\t\t},\r\n\t\tonError: (error) => message.error(error.message),\r\n\t});\r\n\r\n\tconst handleSymbolChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetSymbol(e.target.value);\r\n\t};\r\n\r\n\tconst handleEnterPress = () => {\r\n\t\taddNewUserStock();\r\n\t};\r\n\r\n\tconst handleQuantityChange = (value: string | number | undefined) => {\r\n\t\tsetQuantity(value as any);\r\n\t};\r\n\r\n\tconst handleScoreChange = (value: string | number | undefined) => {\r\n\t\tsetScore(value as any);\r\n\t};\r\n\r\n\tconst handleOpenModal = () => {\r\n\t\tsetVisible(true);\r\n\t};\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetVisible(false);\r\n\t\tsetSymbol('');\r\n\t\tsetQuantity(1);\r\n\t\tsetScore(1);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<AddStock\r\n\t\t\tsymbol={symbol}\r\n\t\t\tquantity={quantity}\r\n\t\t\tscore={score}\r\n\t\t\tvisible={visible}\r\n\t\t\thandleSymbolChange={handleSymbolChange}\r\n\t\t\thandleQuantityChange={handleQuantityChange}\r\n\t\t\thandleScoreChange={handleScoreChange}\r\n\t\t\thandleEnterPress={handleEnterPress}\r\n\t\t\thandleOpenModal={handleOpenModal}\r\n\t\t\thandleCancel={handleCancel}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default AddStockContainer;\r\n","import * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport { CheckOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nimport { UserContext } from '../../contexts/user.context';\r\nimport { Container, Content, Headline } from './stocks.styles';\r\n\r\nimport StockItem from '../stock-item/stock-item.component';\r\nimport { default as AddStock } from '../add-stock/add-stock.container';\r\n\r\nconst Stocks: React.FunctionComponent = () => {\r\n\tconst { currentUser, editableStocks, setEditableStocks } = useContext(\r\n\t\tUserContext\r\n\t);\r\n\r\n\tconst handleToggleEditableStocks = () => {\r\n\t\tsetEditableStocks!(!editableStocks);\r\n\t};\r\n\r\n\tconst isMobile = useMediaQuery({\r\n\t\tquery: '(max-device-width: 768px)',\r\n\t});\r\n\r\n\tconst isIphone5s = useMediaQuery({\r\n\t\tquery: '(max-device-width: 320px)',\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Headline>\r\n\t\t\t\t<p>Stocks</p>\r\n\t\t\t\t<AddStock />\r\n\t\t\t\t<Button\r\n\t\t\t\t\tsize={isMobile ? 'middle' : 'large'}\r\n\t\t\t\t\ttype='primary'\r\n\t\t\t\t\ticon={editableStocks ? <CheckOutlined /> : <EditOutlined />}\r\n\t\t\t\t\tonClick={handleToggleEditableStocks}\r\n\t\t\t\t>\r\n\t\t\t\t\t{isIphone5s ? null : editableStocks ? 'Done' : 'Edit'}\r\n\t\t\t\t</Button>\r\n\t\t\t</Headline>\r\n\t\t\t<Content>\r\n\t\t\t\t{currentUser\r\n\t\t\t\t\t? currentUser!.stocks.map((stock) => (\r\n\t\t\t\t\t\t\t<StockItem\r\n\t\t\t\t\t\t\t\tkey={stock.id}\r\n\t\t\t\t\t\t\t\tstock={stock}\r\n\t\t\t\t\t\t\t\teditableStocks={editableStocks}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t  ))\r\n\t\t\t\t\t: null}\r\n\t\t\t</Content>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Stocks;\r\n","import * as React from 'react';\r\n\r\nimport { Container } from './home.styles';\r\n\r\nimport Wallet from '../../components/wallet/wallet.component';\r\nimport Stocks from '../../components/stocks/stocks.component';\r\n\r\nexport interface HomePageProps {}\r\n\r\nconst HomePage: React.FunctionComponent<HomePageProps> = () => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Wallet />\r\n\t\t\t<Stocks />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default HomePage;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\theight: 100vh;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\r\n\t@media (max-width: 768px) {\r\n\t\tpadding: 2rem 1.5rem;\r\n\t}\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\twidth: 500px;\r\n\tmargin: auto;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\r\n\th1 {\r\n\t\ttext-align: center;\r\n\t\tcolor: #eee;\r\n\t}\r\n\r\n\t.ant-input:nth-child(3) {\r\n\t\tmargin: 1rem 0;\r\n\t}\r\n\r\n\tbutton:nth-child(5) {\r\n\t\tmargin: 1rem 0;\r\n\t}\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Button } from 'antd';\r\n\r\ntype StyledButtonProps = {\r\n\toutlined?: boolean;\r\n};\r\n\r\nexport const StyledButton = styled(Button)<StyledButtonProps>`\r\n\tbackground: ${({ outlined, theme }) =>\r\n\t\toutlined ? 'rgba(0,0,0,0)' : theme.primaryBlue};\r\n\tcolor: ${({ outlined, theme }) => (outlined ? theme.primaryBlue : '#eee')};\r\n`;\r\n","import * as React from 'react';\r\nimport { ButtonProps } from 'antd/lib/button';\r\n\r\nimport { StyledButton } from './custom-button.styles';\r\n\r\nexport interface CustomButtonProps extends ButtonProps {\r\n\toutlined?: boolean;\r\n}\r\n\r\nconst CustomButton: React.FunctionComponent<CustomButtonProps> = (props) => {\r\n\tconst { outlined, ...rest } = props;\r\n\treturn <StyledButton {...rest} outlined={outlined} />;\r\n};\r\n\r\nexport default CustomButton;\r\n","import * as React from 'react';\r\nimport { useEffect, useContext, useState } from 'react';\r\nimport GoogleLogin, {\r\n\tGoogleLoginResponse,\r\n\tGoogleLoginResponseOffline,\r\n} from 'react-google-login';\r\nimport { Button } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GoogleOutlined } from '@ant-design/icons';\r\n\r\nimport { Container, Content } from './login.styles';\r\nimport { UserContext } from '../../contexts/user.context';\r\n\r\nimport { CustomInput } from '../../components/custom-input/custom-input.component';\r\nimport CustomButton from '../../components/custom-button/custom-button.component';\r\n\r\nexport interface LoginPageProps {}\r\n\r\nconst LoginPage: React.FunctionComponent<LoginPageProps> = () => {\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\r\n\tconst { loginWithCredentials, loginWithGoogle, currentUser } = useContext(\r\n\t\tUserContext\r\n\t);\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) history.push('/');\r\n\t}, [currentUser, history]);\r\n\r\n\tconst handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetEmail(e.target.value);\r\n\t};\r\n\r\n\tconst handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetPassword(e.target.value);\r\n\t};\r\n\r\n\tconst handleLoginWithCredentials = () => {\r\n\t\tloginWithCredentials(email, password);\r\n\t};\r\n\r\n\tconst handleLoginWithGoogle = (\r\n\t\tresponse: GoogleLoginResponse | GoogleLoginResponseOffline\r\n\t) => {\r\n\t\tloginWithGoogle(response as GoogleLoginResponse);\r\n\t};\r\n\r\n\tconst handleCreateAnAccount = () => {\r\n\t\thistory.push('/register');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Content>\r\n\t\t\t\t<h1>Login to your account.</h1>\r\n\t\t\t\t<CustomInput\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tplaceholder='E-mail'\r\n\t\t\t\t\tonChange={handleEmailChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<CustomInput\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\tonChange={handlePasswordChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button type='primary' onClick={handleLoginWithCredentials}>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</Button>\r\n\t\t\t\t<GoogleLogin\r\n\t\t\t\t\tclientId={process.env.REACT_APP_GOOGLE_CLIENT_ID!}\r\n\t\t\t\t\tbuttonText='Login'\r\n\t\t\t\t\tonSuccess={handleLoginWithGoogle}\r\n\t\t\t\t\tcookiePolicy={'single_host_origin'}\r\n\t\t\t\t\trender={({ onClick }) => (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\ticon={<GoogleOutlined />}\r\n\t\t\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLogin with Google\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<CustomButton\r\n\t\t\t\t\ttype='primary'\r\n\t\t\t\t\toutlined={true}\r\n\t\t\t\t\tonClick={handleCreateAnAccount}\r\n\t\t\t\t>\r\n\t\t\t\t\tCreate an account\r\n\t\t\t\t</CustomButton>\r\n\t\t\t</Content>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default LoginPage;\r\n","import * as React from 'react';\r\nimport { useContext, useEffect, ReactNode } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { UserContext } from '../../contexts/user.context';\r\n\r\nexport interface AuthenticatedProps {\r\n\tchildren: ReactNode;\r\n}\r\n\r\nconst Authenticated: React.FunctionComponent<AuthenticatedProps> = ({\r\n\tchildren,\r\n}) => {\r\n\tconst { checkUserSession, currentUser, loading } = useContext(UserContext);\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tcheckUserSession();\r\n\t\t// eslint-disable-next-line\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!loading && !currentUser) history.push('/login');\r\n\t}, [currentUser, history, loading]);\r\n\r\n\treturn <>{loading ? null : children}</>;\r\n};\r\n\r\nexport default Authenticated;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\theight: 100vh;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\r\n\t@media (max-width: 768px) {\r\n\t\tpadding: 2rem 1.5rem;\r\n\t}\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\twidth: 500px;\r\n\tmargin: auto;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\r\n\th1 {\r\n\t\ttext-align: center;\r\n\t\tcolor: #eee;\r\n\t\tmargin-bottom: 1rem;\r\n\t}\r\n\r\n\t.ant-input:nth-child(3) {\r\n\t\tmargin: 1rem 0;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tmargin-top: 1rem;\r\n\t}\r\n`;\r\n","import * as React from 'react';\r\nimport { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../../contexts/user.context';\r\nimport { Button, message } from 'antd';\r\n\r\nimport { Container, Content } from './register.styles';\r\n\r\nimport { CustomInput } from '../../components/custom-input/custom-input.component';\r\nimport CustomButton from '../../components/custom-button/custom-button.component';\r\n\r\nexport interface RegisterPageProps {}\r\n\r\nconst RegisterPage: React.FunctionComponent<RegisterPageProps> = () => {\r\n\tconst [name, setName] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\r\n\tconst { register, currentUser } = useContext(UserContext);\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) history.push('/');\r\n\t}, [currentUser, history]);\r\n\r\n\tconst handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetName(e.target.value);\r\n\t};\r\n\tconst handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetEmail(e.target.value);\r\n\t};\r\n\r\n\tconst handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetPassword(e.target.value);\r\n\t};\r\n\r\n\tconst handleLoginClick = () => {\r\n\t\thistory.push('/login');\r\n\t};\r\n\r\n\tconst handleSubmit = () => {\r\n\t\tif (!name || !email || !password) {\r\n\t\t\tmessage.info('Please fill out all the inputs.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (password.length < 6) {\r\n\t\t\tmessage.info('The password must contain at least 6 characters.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tregister(name, email, password);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Content>\r\n\t\t\t\t<h1>\r\n\t\t\t\t\tRegister to create your portfolio. We will help you to\r\n\t\t\t\t\tbalance it.\r\n\t\t\t\t</h1>\r\n\t\t\t\t<CustomInput\r\n\t\t\t\t\tplaceholder='Name'\r\n\t\t\t\t\ttype='primary'\r\n\t\t\t\t\tonChange={handleNameChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<CustomInput\r\n\t\t\t\t\tplaceholder='E-mail'\r\n\t\t\t\t\ttype='primary'\r\n\t\t\t\t\tonChange={handleEmailChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<CustomInput\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\tonChange={handlePasswordChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button type='primary' onClick={handleSubmit}>\r\n\t\t\t\t\tRegister\r\n\t\t\t\t</Button>\r\n\t\t\t\t<CustomButton\r\n\t\t\t\t\ttype='primary'\r\n\t\t\t\t\toutlined\r\n\t\t\t\t\tonClick={handleLoginClick}\r\n\t\t\t\t>\r\n\t\t\t\t\tI already have an account\r\n\t\t\t\t</CustomButton>\r\n\t\t\t</Content>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default RegisterPage;\r\n","import * as React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport './App.less';\n\nimport HomePage from '../pages/home/home.page';\nimport LoginPage from '../pages/login/login.page';\nimport Authenticated from '../components/authenticated/authenticated.component';\nimport RegisterPage from '../pages/register/register.component';\n\nexport interface AppProps {}\n\nconst App: React.FunctionComponent<AppProps> = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path='/login'>\n\t\t\t\t\t<LoginPage />\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path='/register'>\n\t\t\t\t\t<RegisterPage />\n\t\t\t\t</Route>\n\t\t\t\t<Authenticated>\n\t\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t\t<HomePage />\n\t\t\t\t\t</Route>\n\t\t\t\t</Authenticated>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Montserrat', sans-serif;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n        \r\n        background: rgb(35,37,38);\r\n        background: linear-gradient(75deg, rgba(35,37,38,1) 0%, rgba(65,67,69,1) 100%);\r\n\r\n        background-repeat: no-repeat;\r\n        background-attachment: fixed;\r\n\r\n        box-sizing: border-box;\r\n        height: 100vh;\r\n\r\n\r\n        color: #eee;\r\n\r\n        \r\n    }\r\n\r\n    \r\n`;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport App from './App/App';\n\nimport { GlobalStyle } from './index.styles';\nimport UserContextProvider from './contexts/user.context';\n\nconst httpLink = createHttpLink({\n\turi: `${process.env.REACT_APP_GRAPHQL_API_URL}/graphql`,\n});\n\nconst authLink = setContext((_, { headers }) => {\n\tconst token = localStorage.getItem('authToken');\n\treturn {\n\t\theaders: {\n\t\t\t...headers,\n\t\t\tAuthorization: token ? `Bearer ${token}` : '',\n\t\t},\n\t};\n});\n\nconst client = new ApolloClient({\n\tlink: authLink.concat(httpLink),\n\tcache: new InMemoryCache({\n\t\ttypePolicies: {\n\t\t\tUser: {\n\t\t\t\tkeyFields: false,\n\t\t\t},\n\t\t\tStock: {\n\t\t\t\tkeyFields: false,\n\t\t\t},\n\t\t\tStockType: {\n\t\t\t\tkeyFields: false,\n\t\t\t},\n\t\t\tUserType: {\n\t\t\t\tkeyFields: false,\n\t\t\t},\n\t\t},\n\t}),\n});\n\nReactDOM.render(\n\t<ThemeProvider theme={{ primaryBlue: '#1488cc' }}>\n\t\t<GlobalStyle />\n\t\t<ApolloProvider client={client}>\n\t\t\t<UserContextProvider>\n\t\t\t\t<App />\n\t\t\t</UserContextProvider>\n\t\t</ApolloProvider>\n\t</ThemeProvider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}